


ARM Macro Assembler    Page 1 


    1 00000000         ;/******************************************************
                       ***********************/
    2 00000000         ;/* LPC2400.S: Startup file for Philips LPC2400 device s
                       eries                 */
    3 00000000         ;/******************************************************
                       ***********************/
    4 00000000         ;/* <<< Use Configuration Wizard in Context Menu >>>    
                                             */
    5 00000000         ;/******************************************************
                       ***********************/
    6 00000000         ;/* This file is part of the uVision/ARM development too
                       ls.                   */
    7 00000000         ;/* Copyright (c) 2007-2008 Keil - An ARM Company. All r
                       ights reserved.       */
    8 00000000         ;/* This software may only be used under the terms of a 
                       valid, current,       */
    9 00000000         ;/* end user licence from KEIL for a compatible version 
                       of KEIL software      */
   10 00000000         ;/* development tools. Nothing else gives you the right 
                       to use this software. */
   11 00000000         ;/******************************************************
                       ***********************/
   12 00000000         
   13 00000000         ;/*
   14 00000000         ; *  The LPC2400.S code is executed after CPU Reset. Thi
                       s file may be 
   15 00000000         ; *  translated with the following SET symbols. In uVisi
                       on these SET 
   16 00000000         ; *  symbols are entered under Options - ASM - Define.
   17 00000000         ; *
   18 00000000         ; *  NO_CLOCK_SETUP: when set the startup code will not 
                       initialize Clock 
   19 00000000         ; *  (used mostly when clock is already initialized from
                        script .ini 
   20 00000000         ; *  file).
   21 00000000         ; *
   22 00000000         ; *  NO_EMC_SETUP: when set the startup code will not in
                       itialize 
   23 00000000         ; *  External Bus Controller.
   24 00000000         ; *
   25 00000000         ; *  RAM_INTVEC: when set the startup code copies except
                       ion vectors 
   26 00000000         ; *  from on-chip Flash to on-chip RAM.
   27 00000000         ; *
   28 00000000         ; *  REMAP: when set the startup code initializes the re
                       gister MEMMAP 
   29 00000000         ; *  which overwrites the settings of the CPU configurat
                       ion pins. The 
   30 00000000         ; *  startup and interrupt vectors are remapped from:
   31 00000000         ; *     0x00000000  default setting (not remapped)
   32 00000000         ; *     0x40000000  when RAM_MODE is used
   33 00000000         ; *     0x80000000  when EXTMEM_MODE is used
   34 00000000         ; *
   35 00000000         ; *  EXTMEM_MODE: when set the device is configured for 
                       code execution
   36 00000000         ; *  from external memory starting at address 0x80000000
                       .
   37 00000000         ; *
   38 00000000         ; *  RAM_MODE: when set the device is configured for cod



ARM Macro Assembler    Page 2 


                       e execution
   39 00000000         ; *  from on-chip RAM starting at address 0x40000000. 
   40 00000000         ; */
   41 00000000         
   42 00000000         
   43 00000000         ; Standard definitions of Mode bits and Interrupt (I & F
                       ) flags in PSRs
   44 00000000         
   45 00000000 00000010 
                       Mode_USR
                               EQU              0x10
   46 00000000 00000011 
                       Mode_FIQ
                               EQU              0x11
   47 00000000 00000012 
                       Mode_IRQ
                               EQU              0x12
   48 00000000 00000013 
                       Mode_SVC
                               EQU              0x13
   49 00000000 00000017 
                       Mode_ABT
                               EQU              0x17
   50 00000000 0000001B 
                       Mode_UND
                               EQU              0x1B
   51 00000000 0000001F 
                       Mode_SYS
                               EQU              0x1F
   52 00000000         
   53 00000000 00000080 
                       I_Bit   EQU              0x80        ; when I bit is set
                                                            , IRQ is disabled
   54 00000000 00000040 
                       F_Bit   EQU              0x40        ; when F bit is set
                                                            , FIQ is disabled
   55 00000000         
   56 00000000         
   57 00000000         ;----------------------- Memory Definitions ------------
                       ------------------------
   58 00000000         
   59 00000000         ; Internal Memory Base Addresses
   60 00000000 00000000 
                       FLASH_BASE
                               EQU              0x00000000
   61 00000000 40000000 
                       RAM_BASE
                               EQU              0x40000000
   62 00000000 80000000 
                       EXTMEM_BASE
                               EQU              0x80000000
   63 00000000         
   64 00000000         ; External Memory Base Addresses
   65 00000000 80000000 
                       STA_MEM0_BASE
                               EQU              0x80000000
   66 00000000 81000000 
                       STA_MEM1_BASE
                               EQU              0x81000000



ARM Macro Assembler    Page 3 


   67 00000000 82000000 
                       STA_MEM2_BASE
                               EQU              0x82000000
   68 00000000 83000000 
                       STA_MEM3_BASE
                               EQU              0x83000000
   69 00000000 A0000000 
                       DYN_MEM0_BASE
                               EQU              0xA0000000
   70 00000000 B0000000 
                       DYN_MEM1_BASE
                               EQU              0xB0000000
   71 00000000 C0000000 
                       DYN_MEM2_BASE
                               EQU              0xC0000000
   72 00000000 D0000000 
                       DYN_MEM3_BASE
                               EQU              0xD0000000
   73 00000000         
   74 00000000         
   75 00000000         ;----------------------- Stack and Heap Definitions ----
                       ------------------------
   76 00000000         
   77 00000000         ;// <h> Stack Configuration (Stack Sizes in Bytes)
   78 00000000         ;//   <o0> Undefined Mode      <0x0-0xFFFFFFFF:8>
   79 00000000         ;//   <o1> Supervisor Mode     <0x0-0xFFFFFFFF:8>
   80 00000000         ;//   <o2> Abort Mode          <0x0-0xFFFFFFFF:8>
   81 00000000         ;//   <o3> Fast Interrupt Mode <0x0-0xFFFFFFFF:8>
   82 00000000         ;//   <o4> Interrupt Mode      <0x0-0xFFFFFFFF:8>
   83 00000000         ;//   <o5> User/System Mode    <0x0-0xFFFFFFFF:8>
   84 00000000         ;// </h>
   85 00000000         
   86 00000000 00000008 
                       UND_Stack_Size
                               EQU              0x00000008
   87 00000000 00000300 
                       SVC_Stack_Size
                               EQU              0x00000300
   88 00000000 00000008 
                       ABT_Stack_Size
                               EQU              0x00000008
   89 00000000         ;FIQ_Stack_Size  EQU     0x00000008
   90 00000000 00000800 
                       FIQ_Stack_Size
                               EQU              0x00000800  ; Using FIQ for pre
                                                            emptive tick
   91 00000000 00000800 
                       IRQ_Stack_Size
                               EQU              0x00000800
   92 00000000 00000008 
                       USR_Stack_Size
                               EQU              0x00000008
   93 00000000         
   95 00000000 00001310 
                       Stack_Size
                               EQU              (UND_Stack_Size + SVC_Stack_Siz
e + ABT_Stack_Size +                           FIQ_Stack_Size + IRQ_Stack_Size
)
   96 00000000         



ARM Macro Assembler    Page 4 


   97 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   98 00000000         
   99 00000000         Stack_Mem
                               SPACE            Stack_Size
  100 00001310         ;__initial_sp    SPACE   ISR_Stack_Size
  101 00001310         
  102 00001310 00001310 
                       Stack_Top
                               EQU              Stack_Mem + Stack_Size
  103 00001310         
  104 00001310         
  105 00001310         ;// <h> Heap Configuration
  106 00001310         ;//   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF>
  107 00001310         ;// </h>
  108 00001310         
  109 00001310 00400000 
                       Heap_Size
                               EQU              0x00400000
  110 00001310         
  111 00001310                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
  112 00000000         __heap_base
  113 00000000         Heap_Mem
                               SPACE            Heap_Size
  114 00400000         __heap_limit
  115 00400000         
  116 00400000         
  117 00400000         ;----------------------- Clock Definitions -------------
                       ------------------------
  118 00400000         
  119 00400000         ; System Control Block (SCB) Module Definitions
  120 00400000 E01FC000 
                       SCB_BASE
                               EQU              0xE01FC000  ; SCB Base Address
  121 00400000 00000080 
                       PLLCON_OFS
                               EQU              0x80        ; PLL Control Offse
                                                            t
  122 00400000 00000084 
                       PLLCFG_OFS
                               EQU              0x84        ; PLL Configuration
                                                             Offset
  123 00400000 00000088 
                       PLLSTAT_OFS
                               EQU              0x88        ; PLL Status Offset
                                                            
  124 00400000 0000008C 
                       PLLFEED_OFS
                               EQU              0x8C        ; PLL Feed Offset
  125 00400000 00000104 
                       CCLKCFG_OFS
                               EQU              0x104       ; CPU Clock Divider
                                                             Reg Offset
  126 00400000 00000108 
                       USBCLKCFG_OFS
                               EQU              0x108       ; USB Clock Divider
                                                             Reg Offset
  127 00400000 0000010C 



ARM Macro Assembler    Page 5 


                       CLKSRCSEL_OFS
                               EQU              0x10C       ; Clock Source Sel 
                                                            Reg Offset
  128 00400000 000001A0 
                       SCS_OFS EQU              0x1A0       ; Sys Control and S
                                                            tatus Reg Offset
  129 00400000 000001A8 
                       PCLKSEL0_OFS
                               EQU              0x1A8       ; Periph Clock Sel 
                                                            Reg 0 Offset
  130 00400000 000001AC 
                       PCLKSEL1_OFS
                               EQU              0x1AC       ; Periph Clock Sel 
                                                            Reg 0 Offset
  131 00400000         
  132 00400000 000000C0 
                       PCON_OFS
                               EQU              0x0C0       ; Power Mode Contro
                                                            l Reg Offset
  133 00400000 000000C4 
                       PCONP_OFS
                               EQU              0x0C4       ; Power Control for
                                                             Periphs Reg Offset
                                                            
  134 00400000         
  135 00400000         ; Constants
  136 00400000 00000010 
                       OSCRANGE
                               EQU              (1<<4)      ; Oscillator Range 
                                                            Select
  137 00400000 00000020 
                       OSCEN   EQU              (1<<5)      ; Main oscillator E
                                                            nable
  138 00400000 00000040 
                       OSCSTAT EQU              (1<<6)      ; Main Oscillator S
                                                            tatus
  139 00400000 00000001 
                       PLLCON_PLLE
                               EQU              (1<<0)      ; PLL Enable
  140 00400000 00000002 
                       PLLCON_PLLC
                               EQU              (1<<1)      ; PLL Connect
  141 00400000 00007FFF 
                       PLLSTAT_M
                               EQU              (0x7FFF<<0) ; PLL M Value
  142 00400000 00FF0000 
                       PLLSTAT_N
                               EQU              (0xFF<<16)  ; PLL N Value
  143 00400000 04000000 
                       PLLSTAT_PLOCK
                               EQU              (1<<26)     ; PLL Lock Status
  144 00400000         
  145 00400000         ;// <e> Clock Setup
  146 00400000         ;//   <h> System Controls and Status Register (SYS)
  147 00400000         ;//     <o1.4>    OSCRANGE: Main Oscillator Range Select
                       
  148 00400000         ;//                     <0=>  1 MHz to 20 MHz
  149 00400000         ;//                     <1=> 15 MHz to 24 MHz
  150 00400000         ;//     <e1.5>       OSCEN: Main Oscillator Enable



ARM Macro Assembler    Page 6 


  151 00400000         ;//     </e>
  152 00400000         ;//   </h>
  153 00400000         ;//
  154 00400000         ;//   <h> PLL Clock Source Select Register (CLKSRCSEL)
  155 00400000         ;//     <o2.0..1>   CLKSRC: PLL Clock Source Selection
  156 00400000         ;//                     <0=> Internal RC oscillator
  157 00400000         ;//                     <1=> Main oscillator
  158 00400000         ;//                     <2=> RTC oscillator
  159 00400000         ;//   </h>
  160 00400000         ;//
  161 00400000         ;//   <h> PLL Configuration Register (PLLCFG)
  162 00400000         ;//                     <i> PLL_clk = (2* M * PLL_clk_sr
                       c) / N
  163 00400000         ;//     <o3.0..14>    MSEL: PLL Multiplier Selection
  164 00400000         ;//                     <1-32768><#-1>
  165 00400000         ;//                     <i> M Value
  166 00400000         ;//     <o3.16..23>   NSEL: PLL Divider Selection
  167 00400000         ;//                     <1-256><#-1>
  168 00400000         ;//                     <i> N Value
  169 00400000         ;//   </h>
  170 00400000         ;//
  171 00400000         ;//   <h> CPU Clock Configuration Register (CCLKCFG)
  172 00400000         ;//     <o4.0..7>  CCLKSEL: Divide Value for CPU Clock f
                       rom PLL
  173 00400000         ;//                     <2-256:2><#-1>
  174 00400000         ;//   </h>
  175 00400000         ;//
  176 00400000         ;//   <h> USB Clock Configuration Register (USBCLKCFG)
  177 00400000         ;//     <o5.0..3>   USBSEL: Divide Value for USB Clock f
                       rom PLL
  178 00400000         ;//                     <1-16><#-1>
  179 00400000         ;//   </h>
  180 00400000         ;//
  181 00400000         ;//   <h> Peripheral Clock Selection Register 0 (PCLKSEL
                       0)
  182 00400000         ;//     <o6.0..1>      PCLK_WDT: Peripheral Clock Select
                       ion for WDT
  183 00400000         ;//                     <0=> Pclk = Cclk / 4
  184 00400000         ;//                     <1=> Pclk = Cclk
  185 00400000         ;//                     <2=> Pclk = Cclk / 2
  186 00400000         ;//                     <3=> Pclk = Cclk / 8
  187 00400000         ;//     <o6.2..3>   PCLK_TIMER0: Peripheral Clock Select
                       ion for TIMER0
  188 00400000         ;//                     <0=> Pclk = Cclk / 4
  189 00400000         ;//                     <1=> Pclk = Cclk
  190 00400000         ;//                     <2=> Pclk = Cclk / 2
  191 00400000         ;//                     <3=> Pclk = Cclk / 8
  192 00400000         ;//     <o6.4..5>   PCLK_TIMER1: Peripheral Clock Select
                       ion for TIMER1
  193 00400000         ;//                     <0=> Pclk = Cclk / 4
  194 00400000         ;//                     <1=> Pclk = Cclk
  195 00400000         ;//                     <2=> Pclk = Cclk / 2
  196 00400000         ;//                     <3=> Pclk = Cclk / 8
  197 00400000         ;//     <o6.6..7>    PCLK_UART0: Peripheral Clock Select
                       ion for UART0
  198 00400000         ;//                     <0=> Pclk = Cclk / 4
  199 00400000         ;//                     <1=> Pclk = Cclk
  200 00400000         ;//                     <2=> Pclk = Cclk / 2
  201 00400000         ;//                     <3=> Pclk = Cclk / 8



ARM Macro Assembler    Page 7 


  202 00400000         ;//     <o6.8..9>    PCLK_UART1: Peripheral Clock Select
                       ion for UART1
  203 00400000         ;//                     <0=> Pclk = Cclk / 4
  204 00400000         ;//                     <1=> Pclk = Cclk
  205 00400000         ;//                     <2=> Pclk = Cclk / 2
  206 00400000         ;//                     <3=> Pclk = Cclk / 8
  207 00400000         ;//     <o6.10..11>   PCLK_PWM0: Peripheral Clock Select
                       ion for PWM0
  208 00400000         ;//                     <0=> Pclk = Cclk / 4
  209 00400000         ;//                     <1=> Pclk = Cclk
  210 00400000         ;//                     <2=> Pclk = Cclk / 2
  211 00400000         ;//                     <3=> Pclk = Cclk / 8
  212 00400000         ;//     <o6.12..13>   PCLK_PWM1: Peripheral Clock Select
                       ion for PWM1
  213 00400000         ;//                     <0=> Pclk = Cclk / 4
  214 00400000         ;//                     <1=> Pclk = Cclk
  215 00400000         ;//                     <2=> Pclk = Cclk / 2
  216 00400000         ;//                     <3=> Pclk = Cclk / 8
  217 00400000         ;//     <o6.14..15>   PCLK_I2C0: Peripheral Clock Select
                       ion for I2C0
  218 00400000         ;//                     <0=> Pclk = Cclk / 4
  219 00400000         ;//                     <1=> Pclk = Cclk
  220 00400000         ;//                     <2=> Pclk = Cclk / 2
  221 00400000         ;//                     <3=> Pclk = Cclk / 8
  222 00400000         ;//     <o6.16..17>    PCLK_SPI: Peripheral Clock Select
                       ion for SPI
  223 00400000         ;//                     <0=> Pclk = Cclk / 4
  224 00400000         ;//                     <1=> Pclk = Cclk
  225 00400000         ;//                     <2=> Pclk = Cclk / 2
  226 00400000         ;//                     <3=> Pclk = Cclk / 8
  227 00400000         ;//     <o6.18..19>    PCLK_RTC: Peripheral Clock Select
                       ion for RTC
  228 00400000         ;//                     <0=> Pclk = Cclk / 4
  229 00400000         ;//                     <1=> Pclk = Cclk
  230 00400000         ;//                     <2=> Pclk = Cclk / 2
  231 00400000         ;//                     <3=> Pclk = Cclk / 8
  232 00400000         ;//     <o6.20..21>   PCLK_SSP1: Peripheral Clock Select
                       ion for SSP1
  233 00400000         ;//                     <0=> Pclk = Cclk / 4
  234 00400000         ;//                     <1=> Pclk = Cclk
  235 00400000         ;//                     <2=> Pclk = Cclk / 2
  236 00400000         ;//                     <3=> Pclk = Cclk / 8
  237 00400000         ;//     <o6.22..23>    PCLK_DAC: Peripheral Clock Select
                       ion for DAC
  238 00400000         ;//                     <0=> Pclk = Cclk / 4
  239 00400000         ;//                     <1=> Pclk = Cclk
  240 00400000         ;//                     <2=> Pclk = Cclk / 2
  241 00400000         ;//                     <3=> Pclk = Cclk / 8
  242 00400000         ;//     <o6.24..25>    PCLK_ADC: Peripheral Clock Select
                       ion for ADC
  243 00400000         ;//                     <0=> Pclk = Cclk / 4
  244 00400000         ;//                     <1=> Pclk = Cclk
  245 00400000         ;//                     <2=> Pclk = Cclk / 2
  246 00400000         ;//                     <3=> Pclk = Cclk / 8
  247 00400000         ;//     <o6.26..27>   PCLK_CAN1: Peripheral Clock Select
                       ion for CAN1
  248 00400000         ;//                     <0=> Pclk = Cclk / 4
  249 00400000         ;//                     <1=> Pclk = Cclk
  250 00400000         ;//                     <2=> Pclk = Cclk / 2



ARM Macro Assembler    Page 8 


  251 00400000         ;//                     <3=> Pclk = Cclk / 6
  252 00400000         ;//     <o6.28..29>   PCLK_CAN2: Peripheral Clock Select
                       ion for CAN2
  253 00400000         ;//                     <0=> Pclk = Cclk / 4
  254 00400000         ;//                     <1=> Pclk = Cclk
  255 00400000         ;//                     <2=> Pclk = Cclk / 2
  256 00400000         ;//                     <3=> Pclk = Cclk / 6
  257 00400000         ;//     <o6.30..31>    PCLK_ACF: Peripheral Clock Select
                       ion for ACF
  258 00400000         ;//                     <0=> Pclk = Cclk / 4
  259 00400000         ;//                     <1=> Pclk = Cclk
  260 00400000         ;//                     <2=> Pclk = Cclk / 2
  261 00400000         ;//                     <3=> Pclk = Cclk / 6
  262 00400000         ;//   </h>
  263 00400000         ;//
  264 00400000         ;//   <h> Peripheral Clock Selection Register 1 (PCLKSEL
                       1)
  265 00400000         ;//     <o7.0..1>  PCLK_BAT_RAM: Peripheral Clock Select
                       ion for the Battery Supported RAM
  266 00400000         ;//                     <0=> Pclk = Cclk / 4
  267 00400000         ;//                     <1=> Pclk = Cclk
  268 00400000         ;//                     <2=> Pclk = Cclk / 2
  269 00400000         ;//                     <3=> Pclk = Cclk / 8
  270 00400000         ;//     <o7.2..3>     PCLK_GPIO: Peripheral Clock Select
                       ion for GPIOs
  271 00400000         ;//                     <0=> Pclk = Cclk / 4
  272 00400000         ;//                     <1=> Pclk = Cclk
  273 00400000         ;//                     <2=> Pclk = Cclk / 2
  274 00400000         ;//                     <3=> Pclk = Cclk / 8
  275 00400000         ;//     <o7.4..5>      PCLK_PCB: Peripheral Clock Select
                       ion for Pin Connect Block
  276 00400000         ;//                     <0=> Pclk = Cclk / 4
  277 00400000         ;//                     <1=> Pclk = Cclk
  278 00400000         ;//                     <2=> Pclk = Cclk / 2
  279 00400000         ;//                     <3=> Pclk = Cclk / 8
  280 00400000         ;//     <o7.6..7>     PCLK_I2C1: Peripheral Clock Select
                       ion for I2C1
  281 00400000         ;//                     <0=> Pclk = Cclk / 4
  282 00400000         ;//                     <1=> Pclk = Cclk
  283 00400000         ;//                     <2=> Pclk = Cclk / 2
  284 00400000         ;//                     <3=> Pclk = Cclk / 8
  285 00400000         ;//     <o7.10..11>   PCLK_SSP0: Peripheral Clock Select
                       ion for SSP0
  286 00400000         ;//                     <0=> Pclk = Cclk / 4
  287 00400000         ;//                     <1=> Pclk = Cclk
  288 00400000         ;//                     <2=> Pclk = Cclk / 2
  289 00400000         ;//                     <3=> Pclk = Cclk / 8
  290 00400000         ;//     <o7.12..13> PCLK_TIMER2: Peripheral Clock Select
                       ion for TIMER2
  291 00400000         ;//                     <0=> Pclk = Cclk / 4
  292 00400000         ;//                     <1=> Pclk = Cclk
  293 00400000         ;//                     <2=> Pclk = Cclk / 2
  294 00400000         ;//                     <3=> Pclk = Cclk / 8
  295 00400000         ;//     <o7.14..15> PCLK_TIMER3: Peripheral Clock Select
                       ion for TIMER3
  296 00400000         ;//                     <0=> Pclk = Cclk / 4
  297 00400000         ;//                     <1=> Pclk = Cclk
  298 00400000         ;//                     <2=> Pclk = Cclk / 2
  299 00400000         ;//                     <3=> Pclk = Cclk / 8



ARM Macro Assembler    Page 9 


  300 00400000         ;//     <o7.16..17>  PCLK_UART2: Peripheral Clock Select
                       ion for UART2
  301 00400000         ;//                     <0=> Pclk = Cclk / 4
  302 00400000         ;//                     <1=> Pclk = Cclk
  303 00400000         ;//                     <2=> Pclk = Cclk / 2
  304 00400000         ;//                     <3=> Pclk = Cclk / 8
  305 00400000         ;//     <o7.18..19>  PCLK_UART3: Peripheral Clock Select
                       ion for UART3
  306 00400000         ;//                     <0=> Pclk = Cclk / 4
  307 00400000         ;//                     <1=> Pclk = Cclk
  308 00400000         ;//                     <2=> Pclk = Cclk / 2
  309 00400000         ;//                     <3=> Pclk = Cclk / 8
  310 00400000         ;//     <o7.20..21>   PCLK_I2C2: Peripheral Clock Select
                       ion for I2C2
  311 00400000         ;//                     <0=> Pclk = Cclk / 4
  312 00400000         ;//                     <1=> Pclk = Cclk
  313 00400000         ;//                     <2=> Pclk = Cclk / 2
  314 00400000         ;//                     <3=> Pclk = Cclk / 8
  315 00400000         ;//     <o7.22..23>    PCLK_I2S: Peripheral Clock Select
                       ion for I2S
  316 00400000         ;//                     <0=> Pclk = Cclk / 4
  317 00400000         ;//                     <1=> Pclk = Cclk
  318 00400000         ;//                     <2=> Pclk = Cclk / 2
  319 00400000         ;//                     <3=> Pclk = Cclk / 8
  320 00400000         ;//     <o7.24..25>    PCLK_MCI: Peripheral Clock Select
                       ion for MCI
  321 00400000         ;//                     <0=> Pclk = Cclk / 4
  322 00400000         ;//                     <1=> Pclk = Cclk
  323 00400000         ;//                     <2=> Pclk = Cclk / 2
  324 00400000         ;//                     <3=> Pclk = Cclk / 8
  325 00400000         ;//     <o7.28..29> PCLK_SYSCON: Peripheral Clock Select
                       ion for System Control Block
  326 00400000         ;//                     <0=> Pclk = Cclk / 4
  327 00400000         ;//                     <1=> Pclk = Cclk
  328 00400000         ;//                     <2=> Pclk = Cclk / 2
  329 00400000         ;//                     <3=> Pclk = Cclk / 8
  330 00400000         ;//   </h>
  331 00400000         ;// </e>
  332 00400000 00000001 
                       CLOCK_SETUP
                               EQU              1
  333 00400000 00000020 
                       SCS_Val EQU              0x00000020
  334 00400000 00000001 
                       CLKSRCSEL_Val
                               EQU              0x00000001
  335 00400000 0000000B 
                       PLLCFG_Val
                               EQU              0x0000000B
  336 00400000 00000005 
                       CCLKCFG_Val
                               EQU              0x00000005
  337 00400000 00000005 
                       USBCLKCFG_Val
                               EQU              0x00000005
  338 00400000 00000000 
                       PCLKSEL0_Val
                               EQU              0x00000000
  339 00400000 00000000 



ARM Macro Assembler    Page 10 


                       PCLKSEL1_Val
                               EQU              0x00000000
  340 00400000         
  341 00400000         
  342 00400000         ;----------------------- Memory Accelerator Module (MAM)
                        Definitions -----------
  343 00400000         
  344 00400000 E01FC000 
                       MAM_BASE
                               EQU              0xE01FC000  ; MAM Base Address
  345 00400000 00000000 
                       MAMCR_OFS
                               EQU              0x00        ; MAM Control Offse
                                                            t
  346 00400000 00000004 
                       MAMTIM_OFS
                               EQU              0x04        ; MAM Timing Offset
                                                            
  347 00400000         
  348 00400000         ;// <e> MAM Setup
  349 00400000         ;//   <o1.0..1>   MAM Control
  350 00400000         ;//               <0=> Disabled
  351 00400000         ;//               <1=> Partially Enabled
  352 00400000         ;//               <2=> Fully Enabled
  353 00400000         ;//               <i> Mode
  354 00400000         ;//   <o2.0..2>   MAM Timing
  355 00400000         ;//               <0=> Reserved  <1=> 1   <2=> 2   <3=> 
                       3
  356 00400000         ;//               <4=> 4         <5=> 5   <6=> 6   <7=> 
                       7
  357 00400000         ;//               <i> Fetch Cycles
  358 00400000         ;// </e>
  359 00400000 00000001 
                       MAM_SETUP
                               EQU              1
  360 00400000 00000002 
                       MAMCR_Val
                               EQU              0x00000002
  361 00400000 00000004 
                       MAMTIM_Val
                               EQU              0x00000004
  362 00400000         
  363 00400000         
  364 00400000         ;----------------------- Pin Connect Block Definitions -
                       ------------------------
  365 00400000         
  366 00400000 E002C000 
                       PCB_BASE
                               EQU              0xE002C000  ; PCB Base Address
  367 00400000 00000000 
                       PINSEL0_OFS
                               EQU              0x00        ; PINSEL0  Address 
                                                            Offset
  368 00400000 00000004 
                       PINSEL1_OFS
                               EQU              0x04        ; PINSEL1  Address 
                                                            Offset
  369 00400000 00000008 
                       PINSEL2_OFS



ARM Macro Assembler    Page 11 


                               EQU              0x08        ; PINSEL2  Address 
                                                            Offset
  370 00400000 0000000C 
                       PINSEL3_OFS
                               EQU              0x0C        ; PINSEL3  Address 
                                                            Offset
  371 00400000 00000010 
                       PINSEL4_OFS
                               EQU              0x10        ; PINSEL4  Address 
                                                            Offset
  372 00400000 00000014 
                       PINSEL5_OFS
                               EQU              0x14        ; PINSEL5  Address 
                                                            Offset
  373 00400000 00000018 
                       PINSEL6_OFS
                               EQU              0x18        ; PINSEL6  Address 
                                                            Offset
  374 00400000 0000001C 
                       PINSEL7_OFS
                               EQU              0x1C        ; PINSEL7  Address 
                                                            Offset
  375 00400000 00000020 
                       PINSEL8_OFS
                               EQU              0x20        ; PINSEL8  Address 
                                                            Offset
  376 00400000 00000024 
                       PINSEL9_OFS
                               EQU              0x24        ; PINSEL9  Address 
                                                            Offset
  377 00400000 00000028 
                       PINSEL10_OFS
                               EQU              0x28        ; PINSEL10 Address 
                                                            Offset
  378 00400000         
  379 00400000         
  380 00400000         ;----------------------- External Memory Controller (EMC
                       ) Definitons -----------
  381 00400000         
  382 00400000 FFE08000 
                       EMC_BASE
                               EQU              0xFFE08000  ; EMC Base Address
  383 00400000         
  384 00400000 00000000 
                       EMC_CTRL_OFS
                               EQU              0x000
  385 00400000 00000004 
                       EMC_STAT_OFS
                               EQU              0x004
  386 00400000 00000008 
                       EMC_CONFIG_OFS
                               EQU              0x008
  387 00400000 00000020 
                       EMC_DYN_CTRL_OFS
                               EQU              0x020
  388 00400000 00000024 
                       EMC_DYN_RFSH_OFS
                               EQU              0x024
  389 00400000 00000028 



ARM Macro Assembler    Page 12 


                       EMC_DYN_RD_CFG_OFS
                               EQU              0x028
  390 00400000 00000030 
                       EMC_DYN_RP_OFS
                               EQU              0x030
  391 00400000 00000034 
                       EMC_DYN_RAS_OFS
                               EQU              0x034
  392 00400000 00000038 
                       EMC_DYN_SREX_OFS
                               EQU              0x038
  393 00400000 0000003C 
                       EMC_DYN_APR_OFS
                               EQU              0x03C
  394 00400000 00000040 
                       EMC_DYN_DAL_OFS
                               EQU              0x040
  395 00400000 00000044 
                       EMC_DYN_WR_OFS
                               EQU              0x044
  396 00400000 00000048 
                       EMC_DYN_RC_OFS
                               EQU              0x048
  397 00400000 0000004C 
                       EMC_DYN_RFC_OFS
                               EQU              0x04C
  398 00400000 00000050 
                       EMC_DYN_XSR_OFS
                               EQU              0x050
  399 00400000 00000054 
                       EMC_DYN_RRD_OFS
                               EQU              0x054
  400 00400000 00000058 
                       EMC_DYN_MRD_OFS
                               EQU              0x058
  401 00400000 00000100 
                       EMC_DYN_CFG0_OFS
                               EQU              0x100
  402 00400000 00000104 
                       EMC_DYN_RASCAS0_OFS
                               EQU              0x104
  403 00400000 00000140 
                       EMC_DYN_CFG1_OFS
                               EQU              0x140
  404 00400000 00000144 
                       EMC_DYN_RASCAS1_OFS
                               EQU              0x144
  405 00400000 00000160 
                       EMC_DYN_CFG2_OFS
                               EQU              0x160
  406 00400000 00000164 
                       EMC_DYN_RASCAS2_OFS
                               EQU              0x164
  407 00400000 00000180 
                       EMC_DYN_CFG3_OFS
                               EQU              0x180
  408 00400000 00000184 
                       EMC_DYN_RASCAS3_OFS
                               EQU              0x184



ARM Macro Assembler    Page 13 


  409 00400000 00000200 
                       EMC_STA_CFG0_OFS
                               EQU              0x200
  410 00400000 00000204 
                       EMC_STA_WWEN0_OFS
                               EQU              0x204
  411 00400000 00000208 
                       EMC_STA_WOEN0_OFS
                               EQU              0x208
  412 00400000 0000020C 
                       EMC_STA_WRD0_OFS
                               EQU              0x20C
  413 00400000 00000210 
                       EMC_STA_WPAGE0_OFS
                               EQU              0x210
  414 00400000 00000214 
                       EMC_STA_WWR0_OFS
                               EQU              0x214
  415 00400000 00000218 
                       EMC_STA_WTURN0_OFS
                               EQU              0x218
  416 00400000 00000220 
                       EMC_STA_CFG1_OFS
                               EQU              0x220
  417 00400000 00000224 
                       EMC_STA_WWEN1_OFS
                               EQU              0x224
  418 00400000 00000228 
                       EMC_STA_WOEN1_OFS
                               EQU              0x228
  419 00400000 0000022C 
                       EMC_STA_WRD1_OFS
                               EQU              0x22C
  420 00400000 00000230 
                       EMC_STA_WPAGE1_OFS
                               EQU              0x230
  421 00400000 00000234 
                       EMC_STA_WWR1_OFS
                               EQU              0x234
  422 00400000 00000238 
                       EMC_STA_WTURN1_OFS
                               EQU              0x238
  423 00400000 00000240 
                       EMC_STA_CFG2_OFS
                               EQU              0x240
  424 00400000 00000244 
                       EMC_STA_WWEN2_OFS
                               EQU              0x244
  425 00400000 00000248 
                       EMC_STA_WOEN2_OFS
                               EQU              0x248
  426 00400000 0000024C 
                       EMC_STA_WRD2_OFS
                               EQU              0x24C
  427 00400000 00000250 
                       EMC_STA_WPAGE2_OFS
                               EQU              0x250
  428 00400000 00000254 
                       EMC_STA_WWR2_OFS



ARM Macro Assembler    Page 14 


                               EQU              0x254
  429 00400000 00000258 
                       EMC_STA_WTURN2_OFS
                               EQU              0x258
  430 00400000 00000260 
                       EMC_STA_CFG3_OFS
                               EQU              0x260
  431 00400000 00000264 
                       EMC_STA_WWEN3_OFS
                               EQU              0x264
  432 00400000 00000268 
                       EMC_STA_WOEN3_OFS
                               EQU              0x268
  433 00400000 0000026C 
                       EMC_STA_WRD3_OFS
                               EQU              0x26C
  434 00400000 00000270 
                       EMC_STA_WPAGE3_OFS
                               EQU              0x270
  435 00400000 00000274 
                       EMC_STA_WWR3_OFS
                               EQU              0x274
  436 00400000 00000278 
                       EMC_STA_WTURN3_OFS
                               EQU              0x278
  437 00400000 00000080 
                       EMC_STA_EXT_W_OFS
                               EQU              0x080
  438 00400000         
  439 00400000         ; Constants
  440 00400000 00000000 
                       NORMAL_CMD
                               EQU              (0x0 << 7)  ; NORMAL        Com
                                                            mand
  441 00400000 00000080 
                       MODE_CMD
                               EQU              (0x1 << 7)  ; MODE          Com
                                                            mand
  442 00400000 00000100 
                       PALL_CMD
                               EQU              (0x2 << 7)  ; Precharge All Com
                                                            mand
  443 00400000 00000180 
                       NOP_CMD EQU              (0x3 << 7)  ; NOP           Com
                                                            mand
  444 00400000         
  445 00400000 00080000 
                       BUFEN_Const
                               EQU              (1 << 19)   ; Buffer enable bit
                                                            
  446 00400000 00000800 
                       EMC_PCONP_Const
                               EQU              (1 << 11)   ; PCONP val to enab
                                                            le power for EMC
  447 00400000         
  448 00400000         ; External Memory Pins definitions
  449 00400000         ; pin functions for SDRAM, NOR and NAND flash interfacin
                       g
  450 00400000 55010115 



ARM Macro Assembler    Page 15 


                       EMC_PINSEL5_Val
                               EQU              0x55010115  ; !CAS, !RAS, CLKOU
                                                            T0, !DYCS0, DQMOUT0
                                                            , DQMOUT1, DQMOUT2,
                                                             DQMOUT3
  451 00400000 55555555 
                       EMC_PINSEL6_Val
                               EQU              0x55555555  ; D0 .. D15
  452 00400000 55555555 
                       EMC_PINSEL7_Val
                               EQU              0x55555555  ; D16..D31
  453 00400000 55555555 
                       EMC_PINSEL8_Val
                               EQU              0x55555555  ; A0 .. A15
  454 00400000 50055555 
                       EMC_PINSEL9_Val
                               EQU              0x50055555  ;     ; A16 .. A23,
                                                             !OE, !WE, !CS0, !C
                                                            S1
  455 00400000         
  456 00400000         ;//     External Memory Controller Setup (EMC) ---------
                       ------------------------
  457 00400000         ;// <e> External Memory Controller Setup (EMC)
  458 00400000 00000001 
                       EMC_SETUP
                               EQU              1
  459 00400000         
  460 00400000         ;//   <h> EMC Control Register (EMCControl)
  461 00400000         ;//     <i> Controls operation of the memory controller
  462 00400000         ;//     <o0.2> L: Low-power mode enable
  463 00400000         ;//     <o0.1> M: Address mirror enable
  464 00400000         ;//     <o0.0> E: EMC enable
  465 00400000         ;//   </h>
  466 00400000 00000001 
                       EMC_CTRL_Val
                               EQU              0x00000001
  467 00400000         
  468 00400000         ;//   <h> EMC Configuration Register (EMCConfig)
  469 00400000         ;//     <i> Configures operation of the memory controlle
                       r
  470 00400000         ;//     <o0.8> CCLK: CLKOUT ratio
  471 00400000         ;//       <0=> 1:1
  472 00400000         ;//       <1=> 1:2
  473 00400000         ;//     <o0.0> Endian mode
  474 00400000         ;//       <0=> Little-endian
  475 00400000         ;//       <1=> Big-endian
  476 00400000         ;//   </h>
  477 00400000 00000000 
                       EMC_CONFIG_Val
                               EQU              0x00000000
  478 00400000         
  479 00400000         ;//       Dynamic Memory Interface Setup ---------------
                       ------------------------
  480 00400000         ;//   <e> Dynamic Memory Interface Setup
  481 00400000 00000001 
                       EMC_DYNAMIC_SETUP
                               EQU              1
  482 00400000         
  483 00400000         ;//     <h> Dynamic Memory Refresh Timer Register (EMCDy



ARM Macro Assembler    Page 16 


                       namicRefresh)
  484 00400000         ;//       <i> Configures dynamic memory refresh operatio
                       n
  485 00400000         ;//       <o0.0..10> REFRESH: Refresh timer <0x000-0x7FF
                       >
  486 00400000         ;//         <i> 0 = refresh disabled, 0x01-0x7FF: value 
                       * 16 CCLKS
  487 00400000         ;//     </h>
  488 00400000 0000001C 
                       EMC_DYN_RFSH_Val
                               EQU              0x0000001C
  489 00400000         
  490 00400000         ;//     <h> Dynamic Memory Read Configuration Register (
                       EMCDynamicReadConfig)
  491 00400000         ;//       <i> Configures the dynamic memory read strateg
                       y
  492 00400000         ;//       <o0.0..1> RD: Read data strategy
  493 00400000         ;//                  <0=> Clock out delayed strategy
  494 00400000         ;//         <1=> Command delayed strategy
  495 00400000         ;//         <2=> Command delayed strategy plus one clock
                        cycle
  496 00400000         ;//         <3=> Command delayed strategy plus two clock
                        cycles
  497 00400000         ;//     </h>
  498 00400000 00000001 
                       EMC_DYN_RD_CFG_Val
                               EQU              0x00000001
  499 00400000         
  500 00400000         ;//     <h> Dynamic Memory Timings
  501 00400000         ;//       <h> Dynamic Memory Percentage Command Period R
                       egister (EMCDynamictRP)
  502 00400000         ;//         <o0.0..3> tRP: Precharge command period <1-1
                       6> <#-1>
  503 00400000         ;//           <i> The delay is in EMCCLK cycles
  504 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tRP
  505 00400000         ;//       </h>
  506 00400000         ;//       <h> Dynamic Memory Active to Precharge Command
                        Period Register (EMCDynamictRAS)
  507 00400000         ;//         <o1.0..3> tRAS: Active to precharge command 
                       period <1-16> <#-1>
  508 00400000         ;//           <i> The delay is in EMCCLK cycles
  509 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tRAS
  510 00400000         ;//       </h>
  511 00400000         ;//       <h> Dynamic Memory Self-refresh Exit Time Regi
                       ster (EMCDynamictSREX)
  512 00400000         ;//         <o2.0..3> tSREX: Self-refresh exit time <1-1
                       6> <#-1>
  513 00400000         ;//           <i> The delay is in CCLK cycles
  514 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tSREX, 
  515 00400000         ;//           <i> for devices without this parameter you
                        use the same value as tXSR
  516 00400000         ;//       </h>
  517 00400000         ;//       <h> Dynamic Memory Last Data Out to Active Tim
                       e Register (EMCDynamictAPR)
  518 00400000         ;//         <o3.0..3> tAPR: Last-data-out to active comm
                       and time <1-16> <#-1>



ARM Macro Assembler    Page 17 


  519 00400000         ;//           <i> The delay is in CCLK cycles
  520 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tAPR
  521 00400000         ;//       </h>
  522 00400000         ;//       <h> Dynamic Memory Data-in to Active Command T
                       ime Register (EMCDynamictDAL)
  523 00400000         ;//         <o4.0..3> tDAL: Data-in to active command ti
                       me <1-16> <#-1>
  524 00400000         ;//           <i> The delay is in CCLK cycles
  525 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tDAL or tAPW
  526 00400000         ;//       </h>
  527 00400000         ;//       <h> Dynamic Memory Write Recovery Time Registe
                       r (EMCDynamictWR)
  528 00400000         ;//         <o5.0..3> tWR: Write recovery time <1-16> <#
                       -1>
  529 00400000         ;//           <i> The delay is in CCLK cycles
  530 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tWR, tDPL, tRWL, or tRDL
  531 00400000         ;//       </h>
  532 00400000         ;//       <h> Dynamic Memory Active to Active Command Pe
                       riod Register (EMCDynamictRC)
  533 00400000         ;//         <o6.0..4> tRC: Active to active command peri
                       od <1-32> <#-1>
  534 00400000         ;//           <i> The delay is in CCLK cycles
  535 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tRC
  536 00400000         ;//       </h>
  537 00400000         ;//       <h> Dynamic Memory Auto-refresh Period Registe
                       r (EMCDynamictRFC)
  538 00400000         ;//         <o7.0..4> tRFC: Auto-refresh period and auto
                       -refresh to active command period <1-32> <#-1>
  539 00400000         ;//           <i> The delay is in CCLK cycles
  540 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tRFC or  tRC
  541 00400000         ;//       </h>
  542 00400000         ;//       <h> Dynamic Memory Exit Self-refresh Register 
                       (EMCDynamictXSR)
  543 00400000         ;//         <o8.0..4> tXSR: Exit self-refresh to active 
                       command time <1-32> <#-1>
  544 00400000         ;//           <i> The delay is in CCLK cycles
  545 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tXSR
  546 00400000         ;//       </h>
  547 00400000         ;//       <h> Dynamic Memory Active Bank A to Active Ban
                       k B Time Register (EMCDynamicRRD)
  548 00400000         ;//         <o9.0..3> tRRD: Active bank A to active bank
                        B latency <1-16> <#-1>
  549 00400000         ;//           <i> The delay is in CCLK cycles
  550 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tRRD
  551 00400000         ;//       </h>
  552 00400000         ;//       <h> Dynamic Memory Load Mode Register to Activ
                       e Command Time (EMCDynamictMRD)
  553 00400000         ;//         <o10.0..3> tMRD: Load mode register to activ
                       e command time <1-16> <#-1>
  554 00400000         ;//           <i> The delay is in CCLK cycles
  555 00400000         ;//           <i> This value is normally found in SDRAM 
                       data sheets as tMRD or tRSA



ARM Macro Assembler    Page 18 


  556 00400000         ;//       </h>
  557 00400000         ;//     </h>
  558 00400000 00000002 
                       EMC_DYN_RP_Val
                               EQU              0x00000002
  559 00400000 00000003 
                       EMC_DYN_RAS_Val
                               EQU              0x00000003
  560 00400000 00000007 
                       EMC_DYN_SREX_Val
                               EQU              0x00000007
  561 00400000 00000002 
                       EMC_DYN_APR_Val
                               EQU              0x00000002
  562 00400000 00000005 
                       EMC_DYN_DAL_Val
                               EQU              0x00000005
  563 00400000 00000001 
                       EMC_DYN_WR_Val
                               EQU              0x00000001
  564 00400000 00000005 
                       EMC_DYN_RC_Val
                               EQU              0x00000005
  565 00400000 00000005 
                       EMC_DYN_RFC_Val
                               EQU              0x00000005
  566 00400000 00000007 
                       EMC_DYN_XSR_Val
                               EQU              0x00000007
  567 00400000 00000001 
                       EMC_DYN_RRD_Val
                               EQU              0x00000001
  568 00400000 00000002 
                       EMC_DYN_MRD_Val
                               EQU              0x00000002
  569 00400000         
  570 00400000         ;//     <e> Configure External Bus Behaviour for Dynamic
                        CS0 Area
  571 00400000 00000001 
                       EMC_DYNCS0_SETUP
                               EQU              1
  572 00400000         
  573 00400000         ;//       <h> Dynamic Memory Configuration Register (EMC
                       DynamicConfig0)
  574 00400000         ;//         <i> Defines the configuration information fo
                       r the dynamic memory CS0
  575 00400000         ;//         <o0.20> P: Write protect
  576 00400000         ;//         <o0.19> B: Buffer enable
  577 00400000         ;//         <o0.14> AM 14: External bus data width
  578 00400000         ;//           <0=> 16 bit
  579 00400000         ;//           <1=> 32 bit
  580 00400000         ;//         <o0.12> AM 12: External bus memory type
  581 00400000         ;//           <0=> High-performance
  582 00400000         ;//           <1=> Low-power SDRAM
  583 00400000         ;//         <o0.7..11> AM 11..7: External bus address ma
                       pping (Row, Bank, Column)
  584 00400000         ;//           <0x00=> 16 Mb = 2MB (2Mx8), 2 banks, row l
                       ength = 11, column length = 9
  585 00400000         ;//           <0x01=> 16 Mb = 2MB (1Mx16), 2 banks, row 



ARM Macro Assembler    Page 19 


                       length = 11, column length = 8
  586 00400000         ;//           <0x04=> 64 Mb = 8MB (8Mx8), 4 banks, row l
                       ength = 12, column length = 9
  587 00400000         ;//           <0x05=> 64 Mb = 8MB (4Mx16), 4 banks, row 
                       length = 12, column length = 8
  588 00400000         ;//           <0x08=> 128 Mb = 16MB (16Mx8), 4 banks, ro
                       w length = 12, column length = 10
  589 00400000         ;//           <0x09=> 128 Mb = 16MB (8Mx16), 4 banks, ro
                       w length = 12, column length = 9
  590 00400000         ;//           <0x0C=> 256 Mb = 32MB (32Mx8), 4 banks, ro
                       w length = 13, column length = 10
  591 00400000         ;//           <0x0D=> 256 Mb = 32MB (16Mx16), 4 banks, r
                       ow length = 13, column length = 9
  592 00400000         ;//           <0x10=> 512 Mb = 64MB (64Mx8), 4 banks, ro
                       w length = 13, column length = 11
  593 00400000         ;//           <0x11=> 512 Mb = 64MB (32Mx16), 4 banks, r
                       ow length = 13, column length = 10
  594 00400000         ;//         <o0.3..4> MD: Memory device
  595 00400000         ;//           <0=> SDRAM
  596 00400000         ;//           <1=> Low-power SDRAM
  597 00400000         ;//           <2=> Micron SyncFlash
  598 00400000         ;//       </h>
  599 00400000 00080680 
                       EMC_DYN_CFG0_Val
                               EQU              0x00080680
  600 00400000         
  601 00400000         ;//       <h> Dynamic Memory RAS & CAS Delay register (E
                       MCDynamicRASCAS0)
  602 00400000         ;//         <i> Controls the RAS and CAS latencies for t
                       he dynamic memory CS0
  603 00400000         ;//         <o0.8..9> CAS: CAS latency
  604 00400000         ;//           <1=> One CCLK cycle
  605 00400000         ;//           <2=> Two CCLK cycles
  606 00400000         ;//           <3=> Three CCLK cycles
  607 00400000         ;//         <o0.0..1> RAS: RAS latency (active to read/w
                       rite delay)
  608 00400000         ;//           <1=> One CCLK cycle
  609 00400000         ;//           <2=> Two CCLK cycles
  610 00400000         ;//           <3=> Three CCLK cycles
  611 00400000         ;//       </h>
  612 00400000 00000303 
                       EMC_DYN_RASCAS0_Val
                               EQU              0x00000303
  613 00400000         
  614 00400000         ;//     </e> End of Dynamic Setup for CS0 Area
  615 00400000         
  616 00400000         
  617 00400000         ;//     <e> Configure External Bus Behaviour for Dynamic
                        CS1 Area
  618 00400000 00000000 
                       EMC_DYNCS1_SETUP
                               EQU              0
  619 00400000         
  620 00400000         ;//       <h> Dynamic Memory Configuration Register (EMC
                       DynamicConfig1)
  621 00400000         ;//         <i> Defines the configuration information fo
                       r the dynamic memory CS1
  622 00400000         ;//         <o0.20> P: Write protect
  623 00400000         ;//         <o0.19> B: Buffer enable



ARM Macro Assembler    Page 20 


  624 00400000         ;//         <o0.14> AM 14: External bus data width
  625 00400000         ;//           <0=> 16 bit
  626 00400000         ;//           <1=> 32 bit
  627 00400000         ;//         <o0.12> AM 12: External bus memory type
  628 00400000         ;//           <0=> High-performance
  629 00400000         ;//           <1=> Low-power SDRAM
  630 00400000         ;//         <o0.7..11> AM 11..7: External bus address ma
                       pping (Row, Bank, Column)
  631 00400000         ;//           <0x00=> 16 Mb = 2MB (2Mx8), 2 banks, row l
                       ength = 11, column length = 9
  632 00400000         ;//           <0x01=> 16 Mb = 2MB (1Mx16), 2 banks, row 
                       length = 11, column length = 8
  633 00400000         ;//           <0x04=> 64 Mb = 8MB (8Mx8), 4 banks, row l
                       ength = 12, column length = 9
  634 00400000         ;//           <0x05=> 64 Mb = 8MB (4Mx16), 4 banks, row 
                       length = 12, column length = 8
  635 00400000         ;//           <0x08=> 128 Mb = 16MB (16Mx8), 4 banks, ro
                       w length = 12, column length = 10
  636 00400000         ;//           <0x09=> 128 Mb = 16MB (8Mx16), 4 banks, ro
                       w length = 12, column length = 9
  637 00400000         ;//           <0x0C=> 256 Mb = 32MB (32Mx8), 4 banks, ro
                       w length = 13, column length = 10
  638 00400000         ;//           <0x0D=> 256 Mb = 32MB (16Mx16), 4 banks, r
                       ow length = 13, column length = 9
  639 00400000         ;//           <0x10=> 512 Mb = 64MB (64Mx8), 4 banks, ro
                       w length = 13, column length = 11
  640 00400000         ;//           <0x11=> 512 Mb = 64MB (32Mx16), 4 banks, r
                       ow length = 13, column length = 10
  641 00400000         ;//         <o0.3..4> MD: Memory device
  642 00400000         ;//           <0=> SDRAM
  643 00400000         ;//           <1=> Low-power SDRAM
  644 00400000         ;//           <2=> Micron SyncFlash
  645 00400000         ;//       </h>
  646 00400000 00000000 
                       EMC_DYN_CFG1_Val
                               EQU              0x00000000
  647 00400000         
  648 00400000         ;//       <h> Dynamic Memory RAS & CAS Delay register (E
                       MCDynamicRASCAS1)
  649 00400000         ;//         <i> Controls the RAS and CAS latencies for t
                       he dynamic memory CS1
  650 00400000         ;//         <o0.8..9> CAS: CAS latency
  651 00400000         ;//           <1=> One CCLK cycle
  652 00400000         ;//           <2=> Two CCLK cycles
  653 00400000         ;//           <3=> Three CCLK cycles
  654 00400000         ;//         <o0.0..1> RAS: RAS latency (active to read/w
                       rite delay)
  655 00400000         ;//           <1=> One CCLK cycle
  656 00400000         ;//           <2=> Two CCLK cycles
  657 00400000         ;//           <3=> Three CCLK cycles
  658 00400000         ;//       </h>
  659 00400000 00000303 
                       EMC_DYN_RASCAS1_Val
                               EQU              0x00000303
  660 00400000         
  661 00400000         ;//     </e> End of Dynamic Setup for CS1 Area
  662 00400000         
  663 00400000         ;//     <e> Configure External Bus Behaviour for Dynamic
                        CS2 Area



ARM Macro Assembler    Page 21 


  664 00400000 00000000 
                       EMC_DYNCS2_SETUP
                               EQU              0
  665 00400000         
  666 00400000         ;//       <h> Dynamic Memory Configuration Register (EMC
                       DynamicConfig2)
  667 00400000         ;//         <i> Defines the configuration information fo
                       r the dynamic memory CS2
  668 00400000         ;//         <o0.20> P: Write protect
  669 00400000         ;//         <o0.19> B: Buffer enable
  670 00400000         ;//         <o0.14> AM 14: External bus data width
  671 00400000         ;//           <0=> 16 bit
  672 00400000         ;//           <1=> 32 bit
  673 00400000         ;//         <o0.12> AM 12: External bus memory type
  674 00400000         ;//           <0=> High-performance
  675 00400000         ;//           <1=> Low-power SDRAM
  676 00400000         ;//         <o0.7..11> AM 11..7: External bus address ma
                       pping (Row, Bank, Column)
  677 00400000         ;//           <0x00=> 16 Mb = 2MB (2Mx8), 2 banks, row l
                       ength = 11, column length = 9
  678 00400000         ;//           <0x01=> 16 Mb = 2MB (1Mx16), 2 banks, row 
                       length = 11, column length = 8
  679 00400000         ;//           <0x04=> 64 Mb = 8MB (8Mx8), 4 banks, row l
                       ength = 12, column length = 9
  680 00400000         ;//           <0x05=> 64 Mb = 8MB (4Mx16), 4 banks, row 
                       length = 12, column length = 8
  681 00400000         ;//           <0x08=> 128 Mb = 16MB (16Mx8), 4 banks, ro
                       w length = 12, column length = 10
  682 00400000         ;//           <0x09=> 128 Mb = 16MB (8Mx16), 4 banks, ro
                       w length = 12, column length = 9
  683 00400000         ;//           <0x0C=> 256 Mb = 32MB (32Mx8), 4 banks, ro
                       w length = 13, column length = 10
  684 00400000         ;//           <0x0D=> 256 Mb = 32MB (16Mx16), 4 banks, r
                       ow length = 13, column length = 9
  685 00400000         ;//           <0x10=> 512 Mb = 64MB (64Mx8), 4 banks, ro
                       w length = 13, column length = 11
  686 00400000         ;//           <0x11=> 512 Mb = 64MB (32Mx16), 4 banks, r
                       ow length = 13, column length = 10
  687 00400000         ;//         <o0.3..4> MD: Memory device
  688 00400000         ;//           <0=> SDRAM
  689 00400000         ;//           <1=> Low-power SDRAM
  690 00400000         ;//           <2=> Micron SyncFlash
  691 00400000         ;//       </h>
  692 00400000 00000000 
                       EMC_DYN_CFG2_Val
                               EQU              0x00000000
  693 00400000         
  694 00400000         ;//       <h> Dynamic Memory RAS & CAS Delay register (E
                       MCDynamicRASCAS2)
  695 00400000         ;//         <i> Controls the RAS and CAS latencies for t
                       he dynamic memory CS2
  696 00400000         ;//         <o0.8..9> CAS: CAS latency
  697 00400000         ;//           <1=> One CCLK cycle
  698 00400000         ;//           <2=> Two CCLK cycles
  699 00400000         ;//           <3=> Three CCLK cycles
  700 00400000         ;//         <o0.0..1> RAS: RAS latency (active to read/w
                       rite delay)
  701 00400000         ;//           <1=> One CCLK cycle
  702 00400000         ;//           <2=> Two CCLK cycles



ARM Macro Assembler    Page 22 


  703 00400000         ;//           <3=> Three CCLK cycles
  704 00400000         ;//       </h>
  705 00400000 00000303 
                       EMC_DYN_RASCAS2_Val
                               EQU              0x00000303
  706 00400000         
  707 00400000         ;//     </e> End of Dynamic Setup for CS2 Area
  708 00400000         
  709 00400000         ;//     <e> Configure External Bus Behaviour for Dynamic
                        CS3 Area
  710 00400000 00000000 
                       EMC_DYNCS3_SETUP
                               EQU              0
  711 00400000         
  712 00400000         ;//       <h> Dynamic Memory Configuration Register (EMC
                       DynamicConfig3)
  713 00400000         ;//         <i> Defines the configuration information fo
                       r the dynamic memory CS3
  714 00400000         ;//         <o0.20> P: Write protect
  715 00400000         ;//         <o0.19> B: Buffer enable
  716 00400000         ;//         <o0.14> AM 14: External bus data width
  717 00400000         ;//           <0=> 16 bit
  718 00400000         ;//           <1=> 32 bit
  719 00400000         ;//         <o0.12> AM 12: External bus memory type
  720 00400000         ;//           <0=> High-performance
  721 00400000         ;//           <1=> Low-power SDRAM
  722 00400000         ;//         <o0.7..11> AM 11..7: External bus address ma
                       pping (Row, Bank, Column)
  723 00400000         ;//           <0x00=> 16 Mb = 2MB (2Mx8), 2 banks, row l
                       ength = 11, column length = 9
  724 00400000         ;//           <0x01=> 16 Mb = 2MB (1Mx16), 2 banks, row 
                       length = 11, column length = 8
  725 00400000         ;//           <0x04=> 64 Mb = 8MB (8Mx8), 4 banks, row l
                       ength = 12, column length = 9
  726 00400000         ;//           <0x05=> 64 Mb = 8MB (4Mx16), 4 banks, row 
                       length = 12, column length = 8
  727 00400000         ;//           <0x08=> 128 Mb = 16MB (16Mx8), 4 banks, ro
                       w length = 12, column length = 10
  728 00400000         ;//           <0x09=> 128 Mb = 16MB (8Mx16), 4 banks, ro
                       w length = 12, column length = 9
  729 00400000         ;//           <0x0C=> 256 Mb = 32MB (32Mx8), 4 banks, ro
                       w length = 13, column length = 10
  730 00400000         ;//           <0x0D=> 256 Mb = 32MB (16Mx16), 4 banks, r
                       ow length = 13, column length = 9
  731 00400000         ;//           <0x10=> 512 Mb = 64MB (64Mx8), 4 banks, ro
                       w length = 13, column length = 11
  732 00400000         ;//           <0x11=> 512 Mb = 64MB (32Mx16), 4 banks, r
                       ow length = 13, column length = 10
  733 00400000         ;//         <o0.3..4> MD: Memory device
  734 00400000         ;//           <0=> SDRAM
  735 00400000         ;//           <1=> Low-power SDRAM
  736 00400000         ;//           <2=> Micron SyncFlash
  737 00400000         ;//       </h>
  738 00400000 00000000 
                       EMC_DYN_CFG3_Val
                               EQU              0x00000000
  739 00400000         
  740 00400000         ;//       <h> Dynamic Memory RAS & CAS Delay register (E
                       MCDynamicRASCAS3)



ARM Macro Assembler    Page 23 


  741 00400000         ;//         <i> Controls the RAS and CAS latencies for t
                       he dynamic memory CS3
  742 00400000         ;//         <o0.8..9> CAS: CAS latency
  743 00400000         ;//           <1=> One CCLK cycle
  744 00400000         ;//           <2=> Two CCLK cycles
  745 00400000         ;//           <3=> Three CCLK cycles
  746 00400000         ;//         <o0.0..1> RAS: RAS latency (active to read/w
                       rite delay)
  747 00400000         ;//           <1=> One CCLK cycle
  748 00400000         ;//           <2=> Two CCLK cycles
  749 00400000         ;//           <3=> Three CCLK cycles
  750 00400000         ;//       </h>
  751 00400000 00000303 
                       EMC_DYN_RASCAS3_Val
                               EQU              0x00000303
  752 00400000         
  753 00400000         ;//     </e> End of Dynamic Setup for CS3 Area
  754 00400000         
  755 00400000         ;//   </e> End of Dynamic Setup
  756 00400000         
  757 00400000         ;//       Static Memory Interface Setup ----------------
                       ------------------------
  758 00400000         ;//   <e> Static Memory Interface Setup
  759 00400000 00000001 
                       EMC_STATIC_SETUP
                               EQU              1
  760 00400000         
  761 00400000         ;//         Configure External Bus Behaviour for Static 
                       CS0 Area ---------------
  762 00400000         ;//     <e> Configure External Bus Behaviour for Static 
                       CS0 Area
  763 00400000 00000001 
                       EMC_STACS0_SETUP
                               EQU              1
  764 00400000         
  765 00400000         ;//       <h> Static Memory Configuration Register (EMCS
                       taticConfig0)
  766 00400000         ;//         <i> Defines the configuration information fo
                       r the static memory CS0
  767 00400000         ;//         <o0.20> WP: Write protect
  768 00400000         ;//         <o0.19> B: Buffer enable
  769 00400000         ;//         <o0.8> EW: Extended wait enable
  770 00400000         ;//         <o0.7> PB: Byte lane state
  771 00400000         ;//           <0=> For reads BLSn are HIGH, for writes B
                       LSn are LOW
  772 00400000         ;//           <1=> For reads BLSn are LOW, for writes BL
                       Sn are LOW
  773 00400000         ;//         <o0.6> PC: Chip select polarity
  774 00400000         ;//           <0=> Active LOW chip select
  775 00400000         ;//           <1=> Active HIGH chip select
  776 00400000         ;//         <o0.3> PM: Page mode enable
  777 00400000         ;//         <o0.0..1> MW: Memory width
  778 00400000         ;//           <0=> 8 bit
  779 00400000         ;//           <1=> 16 bit
  780 00400000         ;//           <2=> 32 bit
  781 00400000         ;//       </h>
  782 00400000 00000081 
                       EMC_STA_CFG0_Val
                               EQU              0x00000081



ARM Macro Assembler    Page 24 


  783 00400000         
  784 00400000         ;//       <h> Static Memory Write Enable Delay Register 
                       (EMCStaticWaitWen0)
  785 00400000         ;//         <i> Selects the delay from CS0 to write enab
                       le
  786 00400000         ;//         <o.0..3> WAITWEN: Wait write enable <1-16> <
                       #-1>
  787 00400000         ;//           <i> The delay is in CCLK cycles
  788 00400000         ;//       </h>
  789 00400000 00000002 
                       EMC_STA_WWEN0_Val
                               EQU              0x00000002
  790 00400000         
  791 00400000         ;//       <h> Static Memory Output Enable Delay register
                        (EMCStaticWaitOen0)
  792 00400000         ;//         <i> Selects the delay from CS0 or address ch
                       ange, whichever is later, to output enable
  793 00400000         ;//         <o.0..3> WAITOEN: Wait output enable <0-15>
  794 00400000         ;//           <i> The delay is in CCLK cycles
  795 00400000         ;//       </h>
  796 00400000 00000002 
                       EMC_STA_WOEN0_Val
                               EQU              0x00000002
  797 00400000         
  798 00400000         ;//       <h> Static Memory Read Delay Register (EMCStat
                       icWaitRd0)
  799 00400000         ;//         <i> Selects the delay from CS0 to a read acc
                       ess
  800 00400000         ;//         <o.0..4> WAITRD: Non-page mode read wait sta
                       tes or asynchronous page mode read first access wait sta
                       tes <1-32> <#-1>
  801 00400000         ;//           <i> The delay is in CCLK cycles
  802 00400000         ;//       </h>
  803 00400000 0000001F 
                       EMC_STA_WRD0_Val
                               EQU              0x0000001F
  804 00400000         
  805 00400000         ;//       <h> Static Memory Page Mode Read Delay Registe
                       r (EMCStaticWaitPage0)
  806 00400000         ;//         <i> Selects the delay for asynchronous page 
                       mode sequential accesses for CS0
  807 00400000         ;//         <o.0..4> WAITPAGE: Asynchronous page mode re
                       ad after the first read wait states <1-32> <#-1>
  808 00400000         ;//           <i> The delay is in CCLK cycles
  809 00400000         ;//       </h>
  810 00400000 0000001F 
                       EMC_STA_WPAGE0_Val
                               EQU              0x0000001F
  811 00400000         
  812 00400000         ;//       <h> Static Memory Write Delay Register (EMCSta
                       ticWaitWr0)
  813 00400000         ;//         <i> Selects the delay from CS0 to a write ac
                       cess
  814 00400000         ;//         <o.0..4> WAITWR: Write wait states <2-33> <#
                       -2>
  815 00400000         ;//           <i> The delay is in CCLK cycles
  816 00400000         ;//       </h>
  817 00400000 0000001F 
                       EMC_STA_WWR0_Val



ARM Macro Assembler    Page 25 


                               EQU              0x0000001F
  818 00400000         
  819 00400000         ;//       <h> Static Memory Turn Round Delay Register (E
                       MCStaticWaitTurn0)
  820 00400000         ;//         <i> Selects the number of bus turnaround cyc
                       les for CS0
  821 00400000         ;//         <o.0..4> WAITTURN: Bus turnaround cycles <1-
                       16> <#-1>
  822 00400000         ;//           <i> The delay is in CCLK cycles
  823 00400000         ;//       </h>
  824 00400000 0000000F 
                       EMC_STA_WTURN0_Val
                               EQU              0x0000000F
  825 00400000         
  826 00400000         ;//     </e> End of Static Setup for Static CS0 Area
  827 00400000         
  828 00400000         ;//         Configure External Bus Behaviour for Static 
                       CS1 Area ---------------
  829 00400000         ;//     <e> Configure External Bus Behaviour for Static 
                       CS1 Area
  830 00400000 00000000 
                       EMC_STACS1_SETUP
                               EQU              0
  831 00400000         
  832 00400000         ;//       <h> Static Memory Configuration Register (EMCS
                       taticConfig1)
  833 00400000         ;//         <i> Defines the configuration information fo
                       r the static memory CS1
  834 00400000         ;//         <o0.20> WP: Write protect
  835 00400000         ;//         <o0.19> B: Buffer enable
  836 00400000         ;//         <o0.8> EW: Extended wait enable
  837 00400000         ;//         <o0.7> PB: Byte lane state
  838 00400000         ;//           <0=> For reads BLSn are HIGH, for writes B
                       LSn are LOW
  839 00400000         ;//           <1=> For reads BLSn are LOW, for writes BL
                       Sn are LOW
  840 00400000         ;//         <o0.6> PC: Chip select polarity
  841 00400000         ;//           <0=> Active LOW chip select
  842 00400000         ;//           <1=> Active HIGH chip select
  843 00400000         ;//         <o0.3> PM: Page mode enable
  844 00400000         ;//         <o0.0..1> MW: Memory width
  845 00400000         ;//           <0=> 8 bit
  846 00400000         ;//           <1=> 16 bit
  847 00400000         ;//           <2=> 32 bit
  848 00400000         ;//       </h>
  849 00400000 00000000 
                       EMC_STA_CFG1_Val
                               EQU              0x00000000
  850 00400000         
  851 00400000         ;//       <h> Static Memory Write Enable Delay Register 
                       (EMCStaticWaitWen1)
  852 00400000         ;//         <i> Selects the delay from CS1 to write enab
                       le
  853 00400000         ;//         <o.0..3> WAITWEN: Wait write enable <1-16> <
                       #-1>
  854 00400000         ;//           <i> The delay is in CCLK cycles
  855 00400000         ;//       </h>
  856 00400000 00000000 
                       EMC_STA_WWEN1_Val



ARM Macro Assembler    Page 26 


                               EQU              0x00000000
  857 00400000         
  858 00400000         ;//       <h> Static Memory Output Enable Delay register
                        (EMCStaticWaitOen1)
  859 00400000         ;//         <i> Selects the delay from CS1 or address ch
                       ange, whichever is later, to output enable
  860 00400000         ;//         <o.0..3> WAITOEN: Wait output enable <0-15>
  861 00400000         ;//           <i> The delay is in CCLK cycles
  862 00400000         ;//       </h>
  863 00400000 00000000 
                       EMC_STA_WOEN1_Val
                               EQU              0x00000000
  864 00400000         
  865 00400000         ;//       <h> Static Memory Read Delay Register (EMCStat
                       icWaitRd1)
  866 00400000         ;//         <i> Selects the delay from CS1 to a read acc
                       ess
  867 00400000         ;//         <o.0..4> WAITRD: Non-page mode read wait sta
                       tes or asynchronous page mode read first access wait sta
                       tes <1-32> <#-1>
  868 00400000         ;//           <i> The delay is in CCLK cycles
  869 00400000         ;//       </h>
  870 00400000 0000001F 
                       EMC_STA_WRD1_Val
                               EQU              0x0000001F
  871 00400000         
  872 00400000         ;//       <h> Static Memory Page Mode Read Delay Registe
                       r (EMCStaticWaitPage0)
  873 00400000         ;//         <i> Selects the delay for asynchronous page 
                       mode sequential accesses for CS1
  874 00400000         ;//         <o.0..4> WAITPAGE: Asynchronous page mode re
                       ad after the first read wait states <1-32> <#-1>
  875 00400000         ;//           <i> The delay is in CCLK cycles
  876 00400000         ;//       </h>
  877 00400000 0000001F 
                       EMC_STA_WPAGE1_Val
                               EQU              0x0000001F
  878 00400000         
  879 00400000         ;//       <h> Static Memory Write Delay Register (EMCSta
                       ticWaitWr1)
  880 00400000         ;//         <i> Selects the delay from CS1 to a write ac
                       cess
  881 00400000         ;//         <o.0..4> WAITWR: Write wait states <2-33> <#
                       -2>
  882 00400000         ;//           <i> The delay is in CCLK cycles
  883 00400000         ;//       </h>
  884 00400000 0000001F 
                       EMC_STA_WWR1_Val
                               EQU              0x0000001F
  885 00400000         
  886 00400000         ;//       <h> Static Memory Turn Round Delay Register (E
                       MCStaticWaitTurn1)
  887 00400000         ;//         <i> Selects the number of bus turnaround cyc
                       les for CS1
  888 00400000         ;//         <o.0..4> WAITTURN: Bus turnaround cycles <1-
                       16> <#-1>
  889 00400000         ;//           <i> The delay is in CCLK cycles
  890 00400000         ;//       </h>
  891 00400000 0000000F 



ARM Macro Assembler    Page 27 


                       EMC_STA_WTURN1_Val
                               EQU              0x0000000F
  892 00400000         
  893 00400000         ;//     </e> End of Static Setup for Static CS1 Area
  894 00400000         
  895 00400000         ;//         Configure External Bus Behaviour for Static 
                       CS2 Area ---------------
  896 00400000         ;//     <e> Configure External Bus Behaviour for Static 
                       CS2 Area
  897 00400000 00000000 
                       EMC_STACS2_SETUP
                               EQU              0
  898 00400000         
  899 00400000         ;//       <h> Static Memory Configuration Register (EMCS
                       taticConfig2)
  900 00400000         ;//         <i> Defines the configuration information fo
                       r the static memory CS2
  901 00400000         ;//         <o0.20> WP: Write protect
  902 00400000         ;//         <o0.19> B: Buffer enable
  903 00400000         ;//         <o0.8> EW: Extended wait enable
  904 00400000         ;//         <o0.7> PB: Byte lane state
  905 00400000         ;//           <0=> For reads BLSn are HIGH, for writes B
                       LSn are LOW
  906 00400000         ;//           <1=> For reads BLSn are LOW, for writes BL
                       Sn are LOW
  907 00400000         ;//         <o0.6> PC: Chip select polarity
  908 00400000         ;//           <0=> Active LOW chip select
  909 00400000         ;//           <1=> Active HIGH chip select
  910 00400000         ;//         <o0.3> PM: Page mode enable
  911 00400000         ;//         <o0.0..1> MW: Memory width
  912 00400000         ;//           <0=> 8 bit
  913 00400000         ;//           <1=> 16 bit
  914 00400000         ;//           <2=> 32 bit
  915 00400000         ;//       </h>
  916 00400000 00000000 
                       EMC_STA_CFG2_Val
                               EQU              0x00000000
  917 00400000         
  918 00400000         ;//       <h> Static Memory Write Enable Delay Register 
                       (EMCStaticWaitWen2)
  919 00400000         ;//         <i> Selects the delay from CS2 to write enab
                       le
  920 00400000         ;//         <o.0..3> WAITWEN: Wait write enable <1-16> <
                       #-1>
  921 00400000         ;//           <i> The delay is in CCLK cycles
  922 00400000         ;//       </h>
  923 00400000 00000000 
                       EMC_STA_WWEN2_Val
                               EQU              0x00000000
  924 00400000         
  925 00400000         ;//       <h> Static Memory Output Enable Delay register
                        (EMCStaticWaitOen2)
  926 00400000         ;//         <i> Selects the delay from CS2 or address ch
                       ange, whichever is later, to output enable
  927 00400000         ;//         <o.0..3> WAITOEN: Wait output enable <0-15>
  928 00400000         ;//           <i> The delay is in CCLK cycles
  929 00400000         ;//       </h>
  930 00400000 00000000 
                       EMC_STA_WOEN2_Val



ARM Macro Assembler    Page 28 


                               EQU              0x00000000
  931 00400000         
  932 00400000         ;//       <h> Static Memory Read Delay Register (EMCStat
                       icWaitRd2)
  933 00400000         ;//         <i> Selects the delay from CS2 to a read acc
                       ess
  934 00400000         ;//         <o.0..4> WAITRD: Non-page mode read wait sta
                       tes or asynchronous page mode read first access wait sta
                       tes <1-32> <#-1>
  935 00400000         ;//           <i> The delay is in CCLK cycles
  936 00400000         ;//       </h>
  937 00400000 0000001F 
                       EMC_STA_WRD2_Val
                               EQU              0x0000001F
  938 00400000         
  939 00400000         ;//       <h> Static Memory Page Mode Read Delay Registe
                       r (EMCStaticWaitPage2)
  940 00400000         ;//         <i> Selects the delay for asynchronous page 
                       mode sequential accesses for CS2
  941 00400000         ;//         <o.0..4> WAITPAGE: Asynchronous page mode re
                       ad after the first read wait states <1-32> <#-1>
  942 00400000         ;//           <i> The delay is in CCLK cycles
  943 00400000         ;//       </h>
  944 00400000 0000001F 
                       EMC_STA_WPAGE2_Val
                               EQU              0x0000001F
  945 00400000         
  946 00400000         ;//       <h> Static Memory Write Delay Register (EMCSta
                       ticWaitWr2)
  947 00400000         ;//         <i> Selects the delay from CS2 to a write ac
                       cess
  948 00400000         ;//         <o.0..4> WAITWR: Write wait states <2-33> <#
                       -2>
  949 00400000         ;//           <i> The delay is in CCLK cycles
  950 00400000         ;//       </h>
  951 00400000 0000001F 
                       EMC_STA_WWR2_Val
                               EQU              0x0000001F
  952 00400000         
  953 00400000         ;//       <h> Static Memory Turn Round Delay Register (E
                       MCStaticWaitTurn2)
  954 00400000         ;//         <i> Selects the number of bus turnaround cyc
                       les for CS2
  955 00400000         ;//         <o.0..4> WAITTURN: Bus turnaround cycles <1-
                       16> <#-1>
  956 00400000         ;//           <i> The delay is in CCLK cycles
  957 00400000         ;//       </h>
  958 00400000 0000000F 
                       EMC_STA_WTURN2_Val
                               EQU              0x0000000F
  959 00400000         
  960 00400000         ;//     </e> End of Static Setup for Static CS2 Area
  961 00400000         
  962 00400000         ;//         Configure External Bus Behaviour for Static 
                       CS3 Area ---------------
  963 00400000         ;//     <e> Configure External Bus Behaviour for Static 
                       CS3 Area
  964 00400000 00000000 
                       EMC_STACS3_SETUP



ARM Macro Assembler    Page 29 


                               EQU              0
  965 00400000         
  966 00400000         ;//       <h> Static Memory Configuration Register (EMCS
                       taticConfig3)
  967 00400000         ;//         <i> Defines the configuration information fo
                       r the static memory CS3
  968 00400000         ;//         <o0.20> WP: Write protect
  969 00400000         ;//         <o0.19> B: Buffer enable
  970 00400000         ;//         <o0.8> EW: Extended wait enable
  971 00400000         ;//         <o0.7> PB: Byte lane state
  972 00400000         ;//           <0=> For reads BLSn are HIGH, for writes B
                       LSn are LOW
  973 00400000         ;//           <1=> For reads BLSn are LOW, for writes BL
                       Sn are LOW
  974 00400000         ;//         <o0.6> PC: Chip select polarity
  975 00400000         ;//           <0=> Active LOW chip select
  976 00400000         ;//           <1=> Active HIGH chip select
  977 00400000         ;//         <o0.3> PM: Page mode enable
  978 00400000         ;//         <o0.0..1> MW: Memory width
  979 00400000         ;//           <0=> 8 bit
  980 00400000         ;//           <1=> 16 bit
  981 00400000         ;//           <2=> 32 bit
  982 00400000         ;//       </h>
  983 00400000 00000000 
                       EMC_STA_CFG3_Val
                               EQU              0x00000000
  984 00400000         
  985 00400000         ;//       <h> Static Memory Write Enable Delay Register 
                       (EMCStaticWaitWen3)
  986 00400000         ;//         <i> Selects the delay from CS3 to write enab
                       le
  987 00400000         ;//         <o.0..3> WAITWEN: Wait write enable <1-16> <
                       #-1>
  988 00400000         ;//           <i> The delay is in CCLK cycles
  989 00400000         ;//       </h>
  990 00400000 00000000 
                       EMC_STA_WWEN3_Val
                               EQU              0x00000000
  991 00400000         
  992 00400000         ;//       <h> Static Memory Output Enable Delay register
                        (EMCStaticWaitOen3)
  993 00400000         ;//         <i> Selects the delay from CS3 or address ch
                       ange, whichever is later, to output enable
  994 00400000         ;//         <o.0..3> WAITOEN: Wait output enable <0-15>
  995 00400000         ;//           <i> The delay is in CCLK cycles
  996 00400000         ;//       </h>
  997 00400000 00000000 
                       EMC_STA_WOEN3_Val
                               EQU              0x00000000
  998 00400000         
  999 00400000         ;//       <h> Static Memory Read Delay Register (EMCStat
                       icWaitRd3)
 1000 00400000         ;//         <i> Selects the delay from CS3 to a read acc
                       ess
 1001 00400000         ;//         <o.0..4> WAITRD: Non-page mode read wait sta
                       tes or asynchronous page mode read first access wait sta
                       tes <1-32> <#-1>
 1002 00400000         ;//           <i> The delay is in CCLK cycles
 1003 00400000         ;//       </h>



ARM Macro Assembler    Page 30 


 1004 00400000 0000001F 
                       EMC_STA_WRD3_Val
                               EQU              0x0000001F
 1005 00400000         
 1006 00400000         ;//       <h> Static Memory Page Mode Read Delay Registe
                       r (EMCStaticWaitPage3)
 1007 00400000         ;//         <i> Selects the delay for asynchronous page 
                       mode sequential accesses for CS3
 1008 00400000         ;//         <o.0..4> WAITPAGE: Asynchronous page mode re
                       ad after the first read wait states <1-32> <#-1>
 1009 00400000         ;//           <i> The delay is in CCLK cycles
 1010 00400000         ;//       </h>
 1011 00400000 0000001F 
                       EMC_STA_WPAGE3_Val
                               EQU              0x0000001F
 1012 00400000         
 1013 00400000         ;//       <h> Static Memory Write Delay Register (EMCSta
                       ticWaitWr3)
 1014 00400000         ;//         <i> Selects the delay from CS3 to a write ac
                       cess
 1015 00400000         ;//         <o.0..4> WAITWR: Write wait states <2-33> <#
                       -2>
 1016 00400000         ;//           <i> The delay is in CCLK cycles
 1017 00400000         ;//       </h>
 1018 00400000 0000001F 
                       EMC_STA_WWR3_Val
                               EQU              0x0000001F
 1019 00400000         
 1020 00400000         ;//       <h> Static Memory Turn Round Delay Register (E
                       MCStaticWaitTurn3)
 1021 00400000         ;//         <i> Selects the number of bus turnaround cyc
                       les for CS3
 1022 00400000         ;//         <o.0..4> WAITTURN: Bus turnaround cycles <1-
                       16> <#-1>
 1023 00400000         ;//           <i> The delay is in CCLK cycles
 1024 00400000         ;//       </h>
 1025 00400000 0000000F 
                       EMC_STA_WTURN3_Val
                               EQU              0x0000000F
 1026 00400000         
 1027 00400000         ;//     </e> End of Static Setup for Static CS3 Area
 1028 00400000         
 1029 00400000         ;//     <h> Static Memory Extended Wait Register (EMCSta
                       ticExtendedWait)
 1030 00400000         ;//       <i> Time long static memory read and write tra
                       nsfers
 1031 00400000         ;//       <o.0..9> EXTENDEDWAIT: Extended wait time out 
                       <0-1023>
 1032 00400000         ;//         <i> The delay is in (16 * CCLK) cycles
 1033 00400000         ;//     </h>
 1034 00400000 00000000 
                       EMC_STA_EXT_W_Val
                               EQU              0x00000000
 1035 00400000         
 1036 00400000         ;//   </e> End of Static Setup
 1037 00400000         
 1038 00400000         ;// </e> End of EMC Setup
 1039 00400000         
 1040 00400000         



ARM Macro Assembler    Page 31 


 1041 00400000                 PRESERVE8
 1042 00400000         
 1043 00400000         ; Area Definition and Entry Point
 1044 00400000         ;  Startup Code must be linked first at Address at which
                        it expects to run.
 1045 00400000         
 1046 00400000                 AREA             RESET, CODE, READONLY
 1047 00000000                 ARM
 1048 00000000         
 1049 00000000         
 1050 00000000         ; Exception Vectors
 1051 00000000         ;  Mapped to Address 0.
 1052 00000000         ;  Absolute addressing mode must be used.
 1053 00000000         ;  Dummy Handlers are implemented as infinite loops whic
                       h can be modified.
 1054 00000000         
 1055 00000000                 IMPORT           vPortYieldProcessor
 1056 00000000                 IMPORT           vPreemptiveTick
 1057 00000000         
 1058 00000000 E59FF018 
                       Vectors LDR              PC, Reset_Addr
 1059 00000004 E59FF018        LDR              PC, Undef_Addr
 1060 00000008 E59FF018        LDR              PC, SWI_Addr
 1061 0000000C E59FF018        LDR              PC, PAbt_Addr
 1062 00000010 E59FF018        LDR              PC, DAbt_Addr
 1063 00000014 E1A00000        NOP                          ; Reserved Vector 
 1064 00000018         ;               LDR     PC, IRQ_Addr
 1065 00000018 E51FF120        LDR              PC, [PC, #-0x0120] ; Vector fro
                                                            m VicVectAddr
 1066 0000001C E59FF018        LDR              PC, FIQ_Addr
 1067 00000020         
 1068 00000020 00000000 
                       Reset_Addr
                               DCD              Reset_Handler
 1069 00000024 00000000 
                       Undef_Addr
                               DCD              Undef_Handler
 1070 00000028 00000000 
                       SWI_Addr
                               DCD              vPortYieldProcessor
 1071 0000002C 00000000 
                       PAbt_Addr
                               DCD              PAbt_Handler
 1072 00000030 00000000 
                       DAbt_Addr
                               DCD              DAbt_Handler
 1073 00000034 00000000        DCD              0           ; Reserved Address 
                                                            
 1074 00000038 00000000 
                       IRQ_Addr
                               DCD              IRQ_Handler
 1075 0000003C         ;FIQ_Addr        DCD     FIQ_Handler
 1076 0000003C 00000000 
                       FIQ_Addr
                               DCD              vPreemptiveTick ; FIQ used for 
                                                            preemptive tick
 1077 00000040         
 1078 00000040 EAFFFFFE 
                       Undef_Handler



ARM Macro Assembler    Page 32 


                               B                Undef_Handler
 1079 00000044 EAFFFFFE 
                       SWI_Handler
                               B                SWI_Handler
 1080 00000048 EAFFFFFE 
                       PAbt_Handler
                               B                PAbt_Handler
 1081 0000004C EAFFFFFE 
                       DAbt_Handler
                               B                DAbt_Handler
 1082 00000050 EAFFFFFE 
                       IRQ_Handler
                               B                IRQ_Handler
 1083 00000054 EAFFFFFE 
                       FIQ_Handler
                               B                FIQ_Handler
 1084 00000058         
 1085 00000058         
 1086 00000058         ; Reset Handler
 1087 00000058                 EXPORT           Reset_Handler
 1088 00000058         Reset_Handler
 1089 00000058         
 1090 00000058         
 1091 00000058         ; Clock Setup ------------------------------------------
                       ------------------------
 1092 00000058         
 1093 00000058                 IF               (:LNOT:(:DEF:NO_CLOCK_SETUP)):L
AND:(CLOCK_SETUP != 0)
 1094 00000058 E59F02A0        LDR              R0, =SCB_BASE
 1095 0000005C E3A010AA        MOV              R1, #0xAA
 1096 00000060 E3A02055        MOV              R2, #0x55
 1097 00000064         
 1098 00000064         ;  Configure and Enable PLL
 1099 00000064 E3A03020        LDR              R3, =SCS_Val ; Enable main osci
                                                            llator
 1100 00000068 E58031A0        STR              R3, [R0, #SCS_OFS]
 1101 0000006C         
 1102 0000006C                 IF               (SCS_Val:AND:OSCEN) != 0
 1103 0000006C E59031A0 
                       OSC_Loop
                               LDR              R3, [R0, #SCS_OFS] ; Wait for m
                                                            ain osc stabilize
 1104 00000070 E2133040        ANDS             R3, R3, #OSCSTAT
 1105 00000074 0AFFFFFC        BEQ              OSC_Loop
 1106 00000078                 ENDIF
 1107 00000078         
 1108 00000078 E3A03001        LDR              R3, =CLKSRCSEL_Val ; Select PLL
                                                             source clock
 1109 0000007C E580310C        STR              R3, [R0, #CLKSRCSEL_OFS]
 1110 00000080 E3A0300B        LDR              R3, =PLLCFG_Val
 1111 00000084 E5803084        STR              R3, [R0, #PLLCFG_OFS]
 1112 00000088 E580108C        STR              R1, [R0, #PLLFEED_OFS]
 1113 0000008C E580208C        STR              R2, [R0, #PLLFEED_OFS]
 1114 00000090 E3A03001        MOV              R3, #PLLCON_PLLE
 1115 00000094 E5803080        STR              R3, [R0, #PLLCON_OFS]
 1116 00000098 E580108C        STR              R1, [R0, #PLLFEED_OFS]
 1117 0000009C E580208C        STR              R2, [R0, #PLLFEED_OFS]
 1118 000000A0         
 1119 000000A0                 IF               (CLKSRCSEL_Val:AND:3) != 2



ARM Macro Assembler    Page 33 


 1120 000000A0         ;  Wait until PLL Locked (if source is not RTC oscillato
                       r)
 1121 000000A0 E5903088 
                       PLL_Loop
                               LDR              R3, [R0, #PLLSTAT_OFS]
 1122 000000A4 E2133301        ANDS             R3, R3, #PLLSTAT_PLOCK
 1123 000000A8 0AFFFFFC        BEQ              PLL_Loop
 1124 000000AC                 ELSE
 1129                          ENDIF
 1130 000000AC         
 1131 000000AC E5903088 
                       M_N_Lock
                               LDR              R3, [R0, #PLLSTAT_OFS]
 1132 000000B0 E59F424C        LDR              R4, =(PLLSTAT_M:OR:PLLSTAT_N)
 1133 000000B4 E0033004        AND              R3, R3, R4
 1134 000000B8 E3A0400B        LDR              R4, =PLLCFG_Val
 1135 000000BC E0333004        EORS             R3, R3, R4
 1136 000000C0 1AFFFFF9        BNE              M_N_Lock
 1137 000000C4         
 1138 000000C4         ;  Setup CPU clock divider
 1139 000000C4 E3A03005        MOV              R3, #CCLKCFG_Val
 1140 000000C8 E5803104        STR              R3, [R0, #CCLKCFG_OFS]
 1141 000000CC         
 1142 000000CC         ;  Setup USB clock divider
 1143 000000CC E3A03005        LDR              R3, =USBCLKCFG_Val
 1144 000000D0 E5803108        STR              R3, [R0, #USBCLKCFG_OFS]
 1145 000000D4         
 1146 000000D4         ;  Setup Peripheral Clock
 1147 000000D4 E3A03000        LDR              R3, =PCLKSEL0_Val
 1148 000000D8 E58031A8        STR              R3, [R0, #PCLKSEL0_OFS]
 1149 000000DC E3A03000        LDR              R3, =PCLKSEL1_Val
 1150 000000E0 E58031AC        STR              R3, [R0, #PCLKSEL1_OFS]
 1151 000000E4         
 1152 000000E4         ;  Switch to PLL Clock
 1153 000000E4 E3A03003        MOV              R3, #(PLLCON_PLLE:OR:PLLCON_PLL
C)
 1154 000000E8 E5803080        STR              R3, [R0, #PLLCON_OFS]
 1155 000000EC E580108C        STR              R1, [R0, #PLLFEED_OFS]
 1156 000000F0 E580208C        STR              R2, [R0, #PLLFEED_OFS]
 1157 000000F4                 ENDIF                        ; CLOCK_SETUP
 1158 000000F4         
 1159 000000F4         
 1160 000000F4         ; Setup Memory Accelerator Module ----------------------
                       ------------------------
 1161 000000F4         
 1162 000000F4                 IF               MAM_SETUP != 0
 1163 000000F4 E59F0204        LDR              R0, =MAM_BASE
 1164 000000F8 E3A01004        MOV              R1, #MAMTIM_Val
 1165 000000FC E5801004        STR              R1, [R0, #MAMTIM_OFS]
 1166 00000100 E3A01002        MOV              R1, #MAMCR_Val
 1167 00000104 E5801000        STR              R1, [R0, #MAMCR_OFS]
 1168 00000108                 ENDIF                        ; MAM_SETUP
 1169 00000108         
 1170 00000108         
 1171 00000108         ; Setup External Memory Controller ---------------------
                       ------------------------
 1172 00000108         
 1173 00000108                 IF               (:LNOT:(:DEF:NO_EMC_SETUP)):LAN
D:(EMC_SETUP != 0)



ARM Macro Assembler    Page 34 


 1174 00000108 E59F01F8        LDR              R0, =EMC_BASE
 1175 0000010C E59F11EC        LDR              R1, =SCB_BASE
 1176 00000110 E59F21F4        LDR              R2, =PCB_BASE
 1177 00000114         
 1178 00000114 E3A04B02        LDR              R4, =EMC_PCONP_Const 
                                                            ; Enable EMC
 1179 00000118 E59130C4        LDR              R3, [R1, #PCONP_OFS]
 1180 0000011C E1844003        ORR              R4, R4, R3
 1181 00000120 E58140C4        STR              R4, [R1, #PCONP_OFS]
 1182 00000124         
 1183 00000124 E3A04001        LDR              R4, =EMC_CTRL_Val
 1184 00000128 E5804000        STR              R4, [R0, #EMC_CTRL_OFS]
 1185 0000012C E3A04000        LDR              R4, =EMC_CONFIG_Val
 1186 00000130 E5804008        STR              R4, [R0, #EMC_CONFIG_OFS]
 1187 00000134         
 1188 00000134         ;  Setup pin functions for External Bus functionality
 1189 00000134 E59F41D4        LDR              R4, =EMC_PINSEL5_Val
 1190 00000138 E5824014        STR              R4, [R2, #PINSEL5_OFS]
 1191 0000013C E59F41D0        LDR              R4, =EMC_PINSEL6_Val
 1192 00000140 E5824018        STR              R4, [R2, #PINSEL6_OFS]
 1193 00000144 E59F41C8        LDR              R4, =EMC_PINSEL7_Val
 1194 00000148 E582401C        STR              R4, [R2, #PINSEL7_OFS]
 1195 0000014C E59F41C0        LDR              R4, =EMC_PINSEL8_Val
 1196 00000150 E5824020        STR              R4, [R2, #PINSEL8_OFS]
 1197 00000154 E59F41BC        LDR              R4, =EMC_PINSEL9_Val
 1198 00000158 E5824024        STR              R4, [R2, #PINSEL9_OFS]
 1199 0000015C         
 1200 0000015C         ;  Setup Dynamic Memory Interface
 1201 0000015C                 IF               (EMC_DYNAMIC_SETUP != 0)
 1202 0000015C         
 1203 0000015C E3A04002        LDR              R4, =EMC_DYN_RP_Val
 1204 00000160 E5804030        STR              R4, [R0, #EMC_DYN_RP_OFS]
 1205 00000164 E3A04003        LDR              R4, =EMC_DYN_RAS_Val
 1206 00000168 E5804034        STR              R4, [R0, #EMC_DYN_RAS_OFS]
 1207 0000016C E3A04007        LDR              R4, =EMC_DYN_SREX_Val
 1208 00000170 E5804038        STR              R4, [R0, #EMC_DYN_SREX_OFS]
 1209 00000174 E3A04002        LDR              R4, =EMC_DYN_APR_Val
 1210 00000178 E580403C        STR              R4, [R0, #EMC_DYN_APR_OFS]
 1211 0000017C E3A04005        LDR              R4, =EMC_DYN_DAL_Val
 1212 00000180 E5804040        STR              R4, [R0, #EMC_DYN_DAL_OFS]
 1213 00000184 E3A04001        LDR              R4, =EMC_DYN_WR_Val
 1214 00000188 E5804044        STR              R4, [R0, #EMC_DYN_WR_OFS]
 1215 0000018C E3A04005        LDR              R4, =EMC_DYN_RC_Val
 1216 00000190 E5804048        STR              R4, [R0, #EMC_DYN_RC_OFS]
 1217 00000194 E3A04005        LDR              R4, =EMC_DYN_RFC_Val
 1218 00000198 E580404C        STR              R4, [R0, #EMC_DYN_RFC_OFS]
 1219 0000019C E3A04007        LDR              R4, =EMC_DYN_XSR_Val
 1220 000001A0 E5804050        STR              R4, [R0, #EMC_DYN_XSR_OFS]
 1221 000001A4 E3A04001        LDR              R4, =EMC_DYN_RRD_Val
 1222 000001A8 E5804054        STR              R4, [R0, #EMC_DYN_RRD_OFS]
 1223 000001AC E3A04002        LDR              R4, =EMC_DYN_MRD_Val
 1224 000001B0 E5804058        STR              R4, [R0, #EMC_DYN_MRD_OFS]
 1225 000001B4         
 1226 000001B4 E3A04001        LDR              R4, =EMC_DYN_RD_CFG_Val
 1227 000001B8 E5804028        STR              R4, [R0, #EMC_DYN_RD_CFG_OFS]
 1228 000001BC         
 1229 000001BC                 IF               (EMC_DYNCS0_SETUP != 0)
 1230 000001BC E59F4158        LDR              R4, =EMC_DYN_RASCAS0_Val
 1231 000001C0 E5804104        STR              R4, [R0, #EMC_DYN_RASCAS0_OFS]



ARM Macro Assembler    Page 35 


 1232 000001C4 E59F4154        LDR              R4, =EMC_DYN_CFG0_Val
 1233 000001C8 E3E05702        MVN              R5, #BUFEN_Const
 1234 000001CC E0044005        AND              R4, R4, R5
 1235 000001D0 E5804100        STR              R4, [R0, #EMC_DYN_CFG0_OFS]
 1236 000001D4                 ENDIF
 1237 000001D4                 IF               (EMC_DYNCS1_SETUP != 0)
 1244                          ENDIF
 1245 000001D4                 IF               (EMC_DYNCS2_SETUP != 0)
 1252                          ENDIF
 1253 000001D4                 IF               (EMC_DYNCS3_SETUP != 0)
 1260                          ENDIF
 1261 000001D4         
 1262 000001D4 E59F6148        LDR              R6, =1440000 ; Number of cycles
                                                             to delay
 1263 000001D8 E2566001 
                       Wait_0  SUBS             R6, R6, #1  ; Delay ~100 ms pro
                                                            c clk 57.6 MHz
 1264 000001DC 1AFFFFFD        BNE              Wait_0      ; BNE (3 cyc) + SUB
                                                            S (1 cyc) = 4 cyc
 1265 000001E0         
 1266 000001E0 E59F4140        LDR              R4, =(NOP_CMD:OR:0x03) 
                                                            ; Write NOP Command
                                                            
 1267 000001E4 E5804020        STR              R4, [R0, #EMC_DYN_CTRL_OFS]
 1268 000001E8         
 1269 000001E8 E59F613C        LDR              R6, =2880000 ; Number of cycles
                                                             to delay
 1270 000001EC E2566001 
                       Wait_1  SUBS             R6, R6, #1  ; Delay ~200 ms pro
                                                            c clk 57.6 MHz
 1271 000001F0 1AFFFFFD        BNE              Wait_1
 1272 000001F4         
 1273 000001F4 E59F4134        LDR              R4, =(PALL_CMD:OR:0x03) ; Write
                                                             Precharge All Comm
                                                            and
 1274 000001F8 E5804020        STR              R4, [R0, #EMC_DYN_CTRL_OFS]
 1275 000001FC         
 1276 000001FC E3A04002        MOV              R4, #2
 1277 00000200 E5804024        STR              R4, [R0, #EMC_DYN_RFSH_OFS]
 1278 00000204         
 1279 00000204 E3A06040        MOV              R6, #64     ; Number of cycles 
                                                            to delay
 1280 00000208 E2566001 
                       Wait_2  SUBS             R6, R6, #1  ; Delay
 1281 0000020C 1AFFFFFD        BNE              Wait_2
 1282 00000210         
 1283 00000210 E3A0401C        LDR              R4, =EMC_DYN_RFSH_Val
 1284 00000214 E5804024        STR              R4, [R0, #EMC_DYN_RFSH_OFS]
 1285 00000218         
 1286 00000218 E3A04083        LDR              R4, =(MODE_CMD:OR:0x03) ; Write
                                                             MODE Command
 1287 0000021C E5804020        STR              R4, [R0, #EMC_DYN_CTRL_OFS]
 1288 00000220         
 1289 00000220         ; Dummy read  (set SDRAM Mode register)
 1290 00000220                 IF               (EMC_DYNCS0_SETUP != 0)
 1291 00000220 E3A0420A        LDR              R4, =DYN_MEM0_BASE
 1292 00000224 E3A05C03        LDR              R5, =(EMC_DYN_RASCAS0_Val:AND:0
x00000300) 
                                                            ; get CAS Latency



ARM Macro Assembler    Page 36 


 1293 00000228 E1A05225        LSR              R5, #4      ; set CAS Latency  
                                                              (Bit4..6)
 1294 0000022C                 IF               ((EMC_DYN_CFG0_Val:AND:0x000040
00) != 0)
 1298 0000022C E3855003        ORR              R5, R5, #0x03 ; set burst lengt
                                                            h 8 (Bit0..2)
 1299 00000230 E1A05605        LSL              R5, #12
 1300 00000234                 ENDIF
 1301 00000234 E0844005        ADD              R4, R4, R5
 1302 00000238 E5944000        LDR              R4, [R4, #0]
 1303 0000023C                 ENDIF
 1304 0000023C                 IF               (EMC_DYNCS1_SETUP != 0)
 1317                          ENDIF
 1318 0000023C                 IF               (EMC_DYNCS2_SETUP != 0)
 1331                          ENDIF
 1332 0000023C                 IF               (EMC_DYNCS3_SETUP != 0)
 1345                          ENDIF
 1346 0000023C         
 1347 0000023C E3A04000        LDR              R4, =NORMAL_CMD ; Write NORMAL 
                                                            Command
 1348 00000240 E5804020        STR              R4, [R0, #EMC_DYN_CTRL_OFS]
 1349 00000244         
 1350 00000244         ; Enable buffer if requested by settings
 1351 00000244                 IF               (EMC_DYNCS0_SETUP != 0):LAND:((
EMC_DYN_CFG0_Val:AND:BUFEN_Const) != 0)
 1352 00000244 E59F40D4        LDR              R4, =EMC_DYN_CFG0_Val
 1353 00000248 E5804100        STR              R4, [R0, #EMC_DYN_CFG0_OFS]
 1354 0000024C                 ENDIF
 1355 0000024C                 IF               (EMC_DYNCS1_SETUP != 0):LAND:((
EMC_DYN_CFG1_Val:AND:BUFEN_Const) != 0)
 1358                          ENDIF
 1359 0000024C                 IF               (EMC_DYNCS2_SETUP != 0):LAND:((
EMC_DYN_CFG2_Val:AND:BUFEN_Const) != 0)
 1362                          ENDIF
 1363 0000024C                 IF               (EMC_DYNCS3_SETUP != 0):LAND:((
EMC_DYN_CFG3_Val:AND:BUFEN_Const) != 0)
 1366                          ENDIF
 1367 0000024C         
 1368 0000024C E3A06DE1        LDR              R6, =14400  ; Number of cycles 
                                                            to delay
 1369 00000250 E2566001 
                       Wait_3  SUBS             R6, R6, #1  ; Delay ~1 ms @ pro
                                                            c clk 57.6 MHz
 1370 00000254 1AFFFFFD        BNE              Wait_3
 1371 00000258         
 1372 00000258                 ENDIF                        ; EMC_DYNAMIC_SETUP
                                                            
 1373 00000258         
 1374 00000258         ;  Setup Static Memory Interface
 1375 00000258                 IF               (EMC_STATIC_SETUP != 0)
 1376 00000258         
 1377 00000258 E59F60C4        LDR              R6, =1440000 ; Number of cycles
                                                             to delay
 1378 0000025C E2566001 
                       Wait_4  SUBS             R6, R6, #1  ; Delay ~100 ms @ p
                                                            roc clk 57.6 MHz
 1379 00000260 1AFFFFFD        BNE              Wait_4
 1380 00000264         
 1381 00000264                 IF               (EMC_STACS0_SETUP != 0)



ARM Macro Assembler    Page 37 


 1382 00000264 E3A04081        LDR              R4, =EMC_STA_CFG0_Val
 1383 00000268 E5804200        STR              R4, [R0, #EMC_STA_CFG0_OFS]
 1384 0000026C E3A04002        LDR              R4, =EMC_STA_WWEN0_Val
 1385 00000270 E5804204        STR              R4, [R0, #EMC_STA_WWEN0_OFS]
 1386 00000274 E3A04002        LDR              R4, =EMC_STA_WOEN0_Val
 1387 00000278 E5804208        STR              R4, [R0, #EMC_STA_WOEN0_OFS]
 1388 0000027C E3A0401F        LDR              R4, =EMC_STA_WRD0_Val
 1389 00000280 E580420C        STR              R4, [R0, #EMC_STA_WRD0_OFS]
 1390 00000284 E3A0401F        LDR              R4, =EMC_STA_WPAGE0_Val
 1391 00000288 E5804210        STR              R4, [R0, #EMC_STA_WPAGE0_OFS]
 1392 0000028C E3A0401F        LDR              R4, =EMC_STA_WWR0_Val
 1393 00000290 E5804214        STR              R4, [R0, #EMC_STA_WWR0_OFS]
 1394 00000294 E3A0400F        LDR              R4, =EMC_STA_WTURN0_Val
 1395 00000298 E5804218        STR              R4, [R0, #EMC_STA_WTURN0_OFS]
 1396 0000029C                 ENDIF
 1397 0000029C         
 1398 0000029C                 IF               (EMC_STACS1_SETUP != 0)
 1413                          ENDIF
 1414 0000029C         
 1415 0000029C                 IF               (EMC_STACS2_SETUP != 0)
 1430                          ENDIF
 1431 0000029C         
 1432 0000029C                 IF               (EMC_STACS3_SETUP != 0)
 1447                          ENDIF
 1448 0000029C         
 1449 0000029C E59F6090        LDR              R6, =144000 ; Number of cycles 
                                                            to delay
 1450 000002A0 E2566001 
                       Wait_5  SUBS             R6, R6, #1  ; Delay ~10 ms @ pr
                                                            oc clk 57.6 MHz
 1451 000002A4 1AFFFFFD        BNE              Wait_5
 1452 000002A8         
 1453 000002A8 E3A04000        LDR              R4, =EMC_STA_EXT_W_Val
 1454 000002AC E3A05080        LDR              R5, =EMC_STA_EXT_W_OFS
 1455 000002B0 E0855000        ADD              R5, R5, R0
 1456 000002B4 E5854000        STR              R4, [R5, #0]
 1457 000002B8         
 1458 000002B8                 ENDIF                        ; EMC_STATIC_SETUP 
                                                            
 1459 000002B8         
 1460 000002B8                 ENDIF                        ; EMC_SETUP
 1461 000002B8         
 1462 000002B8         
 1463 000002B8         ; Copy Exception Vectors to Internal RAM ---------------
                       ------------------------
 1464 000002B8         
 1465 000002B8                 IF               :DEF:RAM_INTVEC
 1472                          ENDIF
 1473 000002B8         
 1474 000002B8         
 1475 000002B8         ; Memory Mapping (when Interrupt Vectors are in RAM) ---
                       ------------------------
 1476 000002B8         
 1477 000002B8 E01FC040 
                       MEMMAP  EQU              0xE01FC040  ; Memory Mapping Co
                                                            ntrol
 1478 000002B8                 IF               :DEF:REMAP
 1488                          ENDIF
 1489 000002B8         



ARM Macro Assembler    Page 38 


 1490 000002B8         
 1491 000002B8         ; Setup Stack for each mode ----------------------------
                       ------------------------
 1492 000002B8         
 1493 000002B8 E59F0078        LDR              R0, =Stack_Top
 1494 000002BC         
 1495 000002BC         ;  Enter Undefined Instruction Mode and set its Stack Po
                       inter
 1496 000002BC E321F0DB        MSR              CPSR_c, #Mode_UND:OR:I_Bit:OR:F
_Bit
 1497 000002C0 E1A0D000        MOV              SP, R0
 1498 000002C4 E2400008        SUB              R0, R0, #UND_Stack_Size
 1499 000002C8         
 1500 000002C8         ;  Enter Abort Mode and set its Stack Pointer
 1501 000002C8 E321F0D7        MSR              CPSR_c, #Mode_ABT:OR:I_Bit:OR:F
_Bit
 1502 000002CC E1A0D000        MOV              SP, R0
 1503 000002D0 E2400008        SUB              R0, R0, #ABT_Stack_Size
 1504 000002D4         
 1505 000002D4         ;  Enter FIQ Mode and set its Stack Pointer
 1506 000002D4 E321F0D1        MSR              CPSR_c, #Mode_FIQ:OR:I_Bit:OR:F
_Bit
 1507 000002D8 E1A0D000        MOV              SP, R0
 1508 000002DC E2400B02        SUB              R0, R0, #FIQ_Stack_Size
 1509 000002E0         
 1510 000002E0         ;  Enter IRQ Mode and set its Stack Pointer
 1511 000002E0 E321F0D2        MSR              CPSR_c, #Mode_IRQ:OR:I_Bit:OR:F
_Bit
 1512 000002E4 E1A0D000        MOV              SP, R0
 1513 000002E8 E2400B02        SUB              R0, R0, #IRQ_Stack_Size
 1514 000002EC         
 1515 000002EC         ;  Enter Supervisor Mode and set its Stack Pointer
 1516 000002EC E321F0D3        MSR              CPSR_c, #Mode_SVC:OR:I_Bit:OR:F
_Bit
 1517 000002F0 E1A0D000        MOV              SP, R0
 1518 000002F4 E2400C03        SUB              R0, R0, #SVC_Stack_Size
 1519 000002F8         
 1520 000002F8         ;  Enter User Mode and set its Stack Pointer
 1521 000002F8         ;                MSR     CPSR_c, #Mode_USR
 1522 000002F8         ;                IF      :DEF:__MICROLIB
 1523 000002F8         ;
 1524 000002F8         ;                EXPORT __initial_sp
 1525 000002F8         ;
 1526 000002F8         ;                ELSE
 1527 000002F8         ;
 1528 000002F8         ;                MOV     SP, R0
 1529 000002F8         ;                SUB     SL, SP, #USR_Stack_Size
 1530 000002F8         ;
 1531 000002F8         ;                ENDIF
 1532 000002F8         
 1533 000002F8         ; Enter the C code -------------------------------------
                       ------------------------
 1534 000002F8         
 1535 000002F8                 IMPORT           __main
 1536 000002F8 E59F003C        LDR              R0, =__main
 1537 000002FC E12FFF10        BX               R0
 1538 00000300         
 1539 00000300         
 1540 00000300                 IF               :DEF:__MICROLIB



ARM Macro Assembler    Page 39 


 1546 00000300         ; User Initial Stack & Heap
 1547 00000300 E01FC000 
              00FF7FFF 
              FFE08000 
              E002C000 
              55010115 
              55555555 
              50055555 
              00000303 
              00080680 
              0015F900 
              00000183 
              002BF200 
              00000103 
              00023280 
              00000000 
              00000000         AREA             |.text|, CODE, READONLY
 1548 00000000         
 1549 00000000                 IMPORT           __use_two_region_memory
 1550 00000000                 EXPORT           __user_initial_stackheap
 1551 00000000         __user_initial_stackheap
 1552 00000000         
 1553 00000000 E59F000C        LDR              R0, =  Heap_Mem
 1554 00000004 E59F100C        LDR              R1, =(Stack_Mem + USR_Stack_Siz
e)
 1555 00000008 E59F200C        LDR              R2, = (Heap_Mem +      Heap_Siz
e)
 1556 0000000C E59F300C        LDR              R3, = Stack_Mem
 1557 00000010 E12FFF1E        BX               LR
 1558 00000014                 ENDIF
 1559 00000014         
 1560 00000014         
 1561 00000014                 END
              00000000 
              00000008 
              00400000 
              00000000 
Command Line: --xref --diag_suppress=9931 --apcs=interwork --depend=.\lpc2400.d
 -o.\lpc2400.o -I..\FreeRTOS\Source\portable\TCD\ARM7_LPC2468 -IC:\Keil_v5\ARM\
RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefin
e="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 516" --list=.\lpc2400.lst
 LPC2400.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 97 in file LPC2400.s
   Uses
      None
Comment: STACK unused
Stack_Mem 00000000

Symbol: Stack_Mem
   Definitions
      At line 99 in file LPC2400.s
   Uses
      At line 102 in file LPC2400.s
      At line 1554 in file LPC2400.s
      At line 1556 in file LPC2400.s

Stack_Top 00001310

Symbol: Stack_Top
   Definitions
      At line 102 in file LPC2400.s
   Uses
      At line 1493 in file LPC2400.s
Comment: Stack_Top used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 111 in file LPC2400.s
   Uses
      None
Comment: HEAP unused
Heap_Mem 00000000

Symbol: Heap_Mem
   Definitions
      At line 113 in file LPC2400.s
   Uses
      At line 1553 in file LPC2400.s
      At line 1555 in file LPC2400.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 112 in file LPC2400.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00400000

Symbol: __heap_limit
   Definitions
      At line 114 in file LPC2400.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DAbt_Addr 00000030

Symbol: DAbt_Addr
   Definitions
      At line 1072 in file LPC2400.s
   Uses
      At line 1062 in file LPC2400.s
Comment: DAbt_Addr used once
DAbt_Handler 0000004C

Symbol: DAbt_Handler
   Definitions
      At line 1081 in file LPC2400.s
   Uses
      At line 1072 in file LPC2400.s
      At line 1081 in file LPC2400.s

FIQ_Addr 0000003C

Symbol: FIQ_Addr
   Definitions
      At line 1076 in file LPC2400.s
   Uses
      At line 1066 in file LPC2400.s
Comment: FIQ_Addr used once
FIQ_Handler 00000054

Symbol: FIQ_Handler
   Definitions
      At line 1083 in file LPC2400.s
   Uses
      At line 1083 in file LPC2400.s
Comment: FIQ_Handler used once
IRQ_Addr 00000038

Symbol: IRQ_Addr
   Definitions
      At line 1074 in file LPC2400.s
   Uses
      None
Comment: IRQ_Addr unused
IRQ_Handler 00000050

Symbol: IRQ_Handler
   Definitions
      At line 1082 in file LPC2400.s
   Uses
      At line 1074 in file LPC2400.s
      At line 1082 in file LPC2400.s

M_N_Lock 000000AC

Symbol: M_N_Lock
   Definitions
      At line 1131 in file LPC2400.s
   Uses
      At line 1136 in file LPC2400.s
Comment: M_N_Lock used once
OSC_Loop 0000006C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: OSC_Loop
   Definitions
      At line 1103 in file LPC2400.s
   Uses
      At line 1105 in file LPC2400.s
Comment: OSC_Loop used once
PAbt_Addr 0000002C

Symbol: PAbt_Addr
   Definitions
      At line 1071 in file LPC2400.s
   Uses
      At line 1061 in file LPC2400.s
Comment: PAbt_Addr used once
PAbt_Handler 00000048

Symbol: PAbt_Handler
   Definitions
      At line 1080 in file LPC2400.s
   Uses
      At line 1071 in file LPC2400.s
      At line 1080 in file LPC2400.s

PLL_Loop 000000A0

Symbol: PLL_Loop
   Definitions
      At line 1121 in file LPC2400.s
   Uses
      At line 1123 in file LPC2400.s
Comment: PLL_Loop used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 1046 in file LPC2400.s
   Uses
      None
Comment: RESET unused
Reset_Addr 00000020

Symbol: Reset_Addr
   Definitions
      At line 1068 in file LPC2400.s
   Uses
      At line 1058 in file LPC2400.s
Comment: Reset_Addr used once
Reset_Handler 00000058

Symbol: Reset_Handler
   Definitions
      At line 1088 in file LPC2400.s
   Uses
      At line 1068 in file LPC2400.s
      At line 1087 in file LPC2400.s

SWI_Addr 00000028




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: SWI_Addr
   Definitions
      At line 1070 in file LPC2400.s
   Uses
      At line 1060 in file LPC2400.s
Comment: SWI_Addr used once
SWI_Handler 00000044

Symbol: SWI_Handler
   Definitions
      At line 1079 in file LPC2400.s
   Uses
      At line 1079 in file LPC2400.s
Comment: SWI_Handler used once
Undef_Addr 00000024

Symbol: Undef_Addr
   Definitions
      At line 1069 in file LPC2400.s
   Uses
      At line 1059 in file LPC2400.s
Comment: Undef_Addr used once
Undef_Handler 00000040

Symbol: Undef_Handler
   Definitions
      At line 1078 in file LPC2400.s
   Uses
      At line 1069 in file LPC2400.s
      At line 1078 in file LPC2400.s

Vectors 00000000

Symbol: Vectors
   Definitions
      At line 1058 in file LPC2400.s
   Uses
      None
Comment: Vectors unused
Wait_0 000001D8

Symbol: Wait_0
   Definitions
      At line 1263 in file LPC2400.s
   Uses
      At line 1264 in file LPC2400.s
Comment: Wait_0 used once
Wait_1 000001EC

Symbol: Wait_1
   Definitions
      At line 1270 in file LPC2400.s
   Uses
      At line 1271 in file LPC2400.s
Comment: Wait_1 used once
Wait_2 00000208

Symbol: Wait_2
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 1280 in file LPC2400.s
   Uses
      At line 1281 in file LPC2400.s
Comment: Wait_2 used once
Wait_3 00000250

Symbol: Wait_3
   Definitions
      At line 1369 in file LPC2400.s
   Uses
      At line 1370 in file LPC2400.s
Comment: Wait_3 used once
Wait_4 0000025C

Symbol: Wait_4
   Definitions
      At line 1378 in file LPC2400.s
   Uses
      At line 1379 in file LPC2400.s
Comment: Wait_4 used once
Wait_5 000002A0

Symbol: Wait_5
   Definitions
      At line 1450 in file LPC2400.s
   Uses
      At line 1451 in file LPC2400.s
Comment: Wait_5 used once
25 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 1547 in file LPC2400.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 1551 in file LPC2400.s
   Uses
      At line 1550 in file LPC2400.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

ABT_Stack_Size 00000008

Symbol: ABT_Stack_Size
   Definitions
      At line 88 in file LPC2400.s
   Uses
      At line 95 in file LPC2400.s
      At line 1503 in file LPC2400.s

BUFEN_Const 00080000

Symbol: BUFEN_Const
   Definitions
      At line 445 in file LPC2400.s
   Uses
      At line 1233 in file LPC2400.s
      At line 1351 in file LPC2400.s
      At line 1355 in file LPC2400.s
      At line 1359 in file LPC2400.s
      At line 1363 in file LPC2400.s

CCLKCFG_OFS 00000104

Symbol: CCLKCFG_OFS
   Definitions
      At line 125 in file LPC2400.s
   Uses
      At line 1140 in file LPC2400.s
Comment: CCLKCFG_OFS used once
CCLKCFG_Val 00000005

Symbol: CCLKCFG_Val
   Definitions
      At line 336 in file LPC2400.s
   Uses
      At line 1139 in file LPC2400.s
Comment: CCLKCFG_Val used once
CLKSRCSEL_OFS 0000010C

Symbol: CLKSRCSEL_OFS
   Definitions
      At line 127 in file LPC2400.s
   Uses
      At line 1109 in file LPC2400.s
Comment: CLKSRCSEL_OFS used once
CLKSRCSEL_Val 00000001

Symbol: CLKSRCSEL_Val
   Definitions
      At line 334 in file LPC2400.s
   Uses
      At line 1108 in file LPC2400.s
      At line 1119 in file LPC2400.s

CLOCK_SETUP 00000001

Symbol: CLOCK_SETUP
   Definitions
      At line 332 in file LPC2400.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 1093 in file LPC2400.s
Comment: CLOCK_SETUP used once
DYN_MEM0_BASE A0000000

Symbol: DYN_MEM0_BASE
   Definitions
      At line 69 in file LPC2400.s
   Uses
      At line 1291 in file LPC2400.s
Comment: DYN_MEM0_BASE used once
DYN_MEM1_BASE B0000000

Symbol: DYN_MEM1_BASE
   Definitions
      At line 70 in file LPC2400.s
   Uses
      None
Comment: DYN_MEM1_BASE unused
DYN_MEM2_BASE C0000000

Symbol: DYN_MEM2_BASE
   Definitions
      At line 71 in file LPC2400.s
   Uses
      None
Comment: DYN_MEM2_BASE unused
DYN_MEM3_BASE D0000000

Symbol: DYN_MEM3_BASE
   Definitions
      At line 72 in file LPC2400.s
   Uses
      None
Comment: DYN_MEM3_BASE unused
EMC_BASE FFE08000

Symbol: EMC_BASE
   Definitions
      At line 382 in file LPC2400.s
   Uses
      At line 1174 in file LPC2400.s
Comment: EMC_BASE used once
EMC_CONFIG_OFS 00000008

Symbol: EMC_CONFIG_OFS
   Definitions
      At line 386 in file LPC2400.s
   Uses
      At line 1186 in file LPC2400.s
Comment: EMC_CONFIG_OFS used once
EMC_CONFIG_Val 00000000

Symbol: EMC_CONFIG_Val
   Definitions
      At line 477 in file LPC2400.s
   Uses
      At line 1185 in file LPC2400.s
Comment: EMC_CONFIG_Val used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

EMC_CTRL_OFS 00000000

Symbol: EMC_CTRL_OFS
   Definitions
      At line 384 in file LPC2400.s
   Uses
      At line 1184 in file LPC2400.s
Comment: EMC_CTRL_OFS used once
EMC_CTRL_Val 00000001

Symbol: EMC_CTRL_Val
   Definitions
      At line 466 in file LPC2400.s
   Uses
      At line 1183 in file LPC2400.s
Comment: EMC_CTRL_Val used once
EMC_DYNAMIC_SETUP 00000001

Symbol: EMC_DYNAMIC_SETUP
   Definitions
      At line 481 in file LPC2400.s
   Uses
      At line 1201 in file LPC2400.s
Comment: EMC_DYNAMIC_SETUP used once
EMC_DYNCS0_SETUP 00000001

Symbol: EMC_DYNCS0_SETUP
   Definitions
      At line 571 in file LPC2400.s
   Uses
      At line 1229 in file LPC2400.s
      At line 1290 in file LPC2400.s
      At line 1351 in file LPC2400.s

EMC_DYNCS1_SETUP 00000000

Symbol: EMC_DYNCS1_SETUP
   Definitions
      At line 618 in file LPC2400.s
   Uses
      At line 1237 in file LPC2400.s
      At line 1304 in file LPC2400.s
      At line 1355 in file LPC2400.s

EMC_DYNCS2_SETUP 00000000

Symbol: EMC_DYNCS2_SETUP
   Definitions
      At line 664 in file LPC2400.s
   Uses
      At line 1245 in file LPC2400.s
      At line 1318 in file LPC2400.s
      At line 1359 in file LPC2400.s

EMC_DYNCS3_SETUP 00000000

Symbol: EMC_DYNCS3_SETUP
   Definitions
      At line 710 in file LPC2400.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 1253 in file LPC2400.s
      At line 1332 in file LPC2400.s
      At line 1363 in file LPC2400.s

EMC_DYN_APR_OFS 0000003C

Symbol: EMC_DYN_APR_OFS
   Definitions
      At line 393 in file LPC2400.s
   Uses
      At line 1210 in file LPC2400.s
Comment: EMC_DYN_APR_OFS used once
EMC_DYN_APR_Val 00000002

Symbol: EMC_DYN_APR_Val
   Definitions
      At line 561 in file LPC2400.s
   Uses
      At line 1209 in file LPC2400.s
Comment: EMC_DYN_APR_Val used once
EMC_DYN_CFG0_OFS 00000100

Symbol: EMC_DYN_CFG0_OFS
   Definitions
      At line 401 in file LPC2400.s
   Uses
      At line 1235 in file LPC2400.s
      At line 1353 in file LPC2400.s

EMC_DYN_CFG0_Val 00080680

Symbol: EMC_DYN_CFG0_Val
   Definitions
      At line 599 in file LPC2400.s
   Uses
      At line 1232 in file LPC2400.s
      At line 1294 in file LPC2400.s
      At line 1351 in file LPC2400.s
      At line 1352 in file LPC2400.s

EMC_DYN_CFG1_OFS 00000140

Symbol: EMC_DYN_CFG1_OFS
   Definitions
      At line 403 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_CFG1_OFS unused
EMC_DYN_CFG1_Val 00000000

Symbol: EMC_DYN_CFG1_Val
   Definitions
      At line 646 in file LPC2400.s
   Uses
      At line 1355 in file LPC2400.s
Comment: EMC_DYN_CFG1_Val used once
EMC_DYN_CFG2_OFS 00000160




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: EMC_DYN_CFG2_OFS
   Definitions
      At line 405 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_CFG2_OFS unused
EMC_DYN_CFG2_Val 00000000

Symbol: EMC_DYN_CFG2_Val
   Definitions
      At line 692 in file LPC2400.s
   Uses
      At line 1359 in file LPC2400.s
Comment: EMC_DYN_CFG2_Val used once
EMC_DYN_CFG3_OFS 00000180

Symbol: EMC_DYN_CFG3_OFS
   Definitions
      At line 407 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_CFG3_OFS unused
EMC_DYN_CFG3_Val 00000000

Symbol: EMC_DYN_CFG3_Val
   Definitions
      At line 738 in file LPC2400.s
   Uses
      At line 1363 in file LPC2400.s
Comment: EMC_DYN_CFG3_Val used once
EMC_DYN_CTRL_OFS 00000020

Symbol: EMC_DYN_CTRL_OFS
   Definitions
      At line 387 in file LPC2400.s
   Uses
      At line 1267 in file LPC2400.s
      At line 1274 in file LPC2400.s
      At line 1287 in file LPC2400.s
      At line 1348 in file LPC2400.s

EMC_DYN_DAL_OFS 00000040

Symbol: EMC_DYN_DAL_OFS
   Definitions
      At line 394 in file LPC2400.s
   Uses
      At line 1212 in file LPC2400.s
Comment: EMC_DYN_DAL_OFS used once
EMC_DYN_DAL_Val 00000005

Symbol: EMC_DYN_DAL_Val
   Definitions
      At line 562 in file LPC2400.s
   Uses
      At line 1211 in file LPC2400.s
Comment: EMC_DYN_DAL_Val used once
EMC_DYN_MRD_OFS 00000058




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Absolute symbols

Symbol: EMC_DYN_MRD_OFS
   Definitions
      At line 400 in file LPC2400.s
   Uses
      At line 1224 in file LPC2400.s
Comment: EMC_DYN_MRD_OFS used once
EMC_DYN_MRD_Val 00000002

Symbol: EMC_DYN_MRD_Val
   Definitions
      At line 568 in file LPC2400.s
   Uses
      At line 1223 in file LPC2400.s
Comment: EMC_DYN_MRD_Val used once
EMC_DYN_RASCAS0_OFS 00000104

Symbol: EMC_DYN_RASCAS0_OFS
   Definitions
      At line 402 in file LPC2400.s
   Uses
      At line 1231 in file LPC2400.s
Comment: EMC_DYN_RASCAS0_OFS used once
EMC_DYN_RASCAS0_Val 00000303

Symbol: EMC_DYN_RASCAS0_Val
   Definitions
      At line 612 in file LPC2400.s
   Uses
      At line 1230 in file LPC2400.s
      At line 1292 in file LPC2400.s

EMC_DYN_RASCAS1_OFS 00000144

Symbol: EMC_DYN_RASCAS1_OFS
   Definitions
      At line 404 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_RASCAS1_OFS unused
EMC_DYN_RASCAS1_Val 00000303

Symbol: EMC_DYN_RASCAS1_Val
   Definitions
      At line 659 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_RASCAS1_Val unused
EMC_DYN_RASCAS2_OFS 00000164

Symbol: EMC_DYN_RASCAS2_OFS
   Definitions
      At line 406 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_RASCAS2_OFS unused
EMC_DYN_RASCAS2_Val 00000303

Symbol: EMC_DYN_RASCAS2_Val
   Definitions



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Absolute symbols

      At line 705 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_RASCAS2_Val unused
EMC_DYN_RASCAS3_OFS 00000184

Symbol: EMC_DYN_RASCAS3_OFS
   Definitions
      At line 408 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_RASCAS3_OFS unused
EMC_DYN_RASCAS3_Val 00000303

Symbol: EMC_DYN_RASCAS3_Val
   Definitions
      At line 751 in file LPC2400.s
   Uses
      None
Comment: EMC_DYN_RASCAS3_Val unused
EMC_DYN_RAS_OFS 00000034

Symbol: EMC_DYN_RAS_OFS
   Definitions
      At line 391 in file LPC2400.s
   Uses
      At line 1206 in file LPC2400.s
Comment: EMC_DYN_RAS_OFS used once
EMC_DYN_RAS_Val 00000003

Symbol: EMC_DYN_RAS_Val
   Definitions
      At line 559 in file LPC2400.s
   Uses
      At line 1205 in file LPC2400.s
Comment: EMC_DYN_RAS_Val used once
EMC_DYN_RC_OFS 00000048

Symbol: EMC_DYN_RC_OFS
   Definitions
      At line 396 in file LPC2400.s
   Uses
      At line 1216 in file LPC2400.s
Comment: EMC_DYN_RC_OFS used once
EMC_DYN_RC_Val 00000005

Symbol: EMC_DYN_RC_Val
   Definitions
      At line 564 in file LPC2400.s
   Uses
      At line 1215 in file LPC2400.s
Comment: EMC_DYN_RC_Val used once
EMC_DYN_RD_CFG_OFS 00000028

Symbol: EMC_DYN_RD_CFG_OFS
   Definitions
      At line 389 in file LPC2400.s
   Uses
      At line 1227 in file LPC2400.s



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Absolute symbols

Comment: EMC_DYN_RD_CFG_OFS used once
EMC_DYN_RD_CFG_Val 00000001

Symbol: EMC_DYN_RD_CFG_Val
   Definitions
      At line 498 in file LPC2400.s
   Uses
      At line 1226 in file LPC2400.s
Comment: EMC_DYN_RD_CFG_Val used once
EMC_DYN_RFC_OFS 0000004C

Symbol: EMC_DYN_RFC_OFS
   Definitions
      At line 397 in file LPC2400.s
   Uses
      At line 1218 in file LPC2400.s
Comment: EMC_DYN_RFC_OFS used once
EMC_DYN_RFC_Val 00000005

Symbol: EMC_DYN_RFC_Val
   Definitions
      At line 565 in file LPC2400.s
   Uses
      At line 1217 in file LPC2400.s
Comment: EMC_DYN_RFC_Val used once
EMC_DYN_RFSH_OFS 00000024

Symbol: EMC_DYN_RFSH_OFS
   Definitions
      At line 388 in file LPC2400.s
   Uses
      At line 1277 in file LPC2400.s
      At line 1284 in file LPC2400.s

EMC_DYN_RFSH_Val 0000001C

Symbol: EMC_DYN_RFSH_Val
   Definitions
      At line 488 in file LPC2400.s
   Uses
      At line 1283 in file LPC2400.s
Comment: EMC_DYN_RFSH_Val used once
EMC_DYN_RP_OFS 00000030

Symbol: EMC_DYN_RP_OFS
   Definitions
      At line 390 in file LPC2400.s
   Uses
      At line 1204 in file LPC2400.s
Comment: EMC_DYN_RP_OFS used once
EMC_DYN_RP_Val 00000002

Symbol: EMC_DYN_RP_Val
   Definitions
      At line 558 in file LPC2400.s
   Uses
      At line 1203 in file LPC2400.s
Comment: EMC_DYN_RP_Val used once
EMC_DYN_RRD_OFS 00000054



ARM Macro Assembler    Page 9 Alphabetic symbol ordering
Absolute symbols


Symbol: EMC_DYN_RRD_OFS
   Definitions
      At line 399 in file LPC2400.s
   Uses
      At line 1222 in file LPC2400.s
Comment: EMC_DYN_RRD_OFS used once
EMC_DYN_RRD_Val 00000001

Symbol: EMC_DYN_RRD_Val
   Definitions
      At line 567 in file LPC2400.s
   Uses
      At line 1221 in file LPC2400.s
Comment: EMC_DYN_RRD_Val used once
EMC_DYN_SREX_OFS 00000038

Symbol: EMC_DYN_SREX_OFS
   Definitions
      At line 392 in file LPC2400.s
   Uses
      At line 1208 in file LPC2400.s
Comment: EMC_DYN_SREX_OFS used once
EMC_DYN_SREX_Val 00000007

Symbol: EMC_DYN_SREX_Val
   Definitions
      At line 560 in file LPC2400.s
   Uses
      At line 1207 in file LPC2400.s
Comment: EMC_DYN_SREX_Val used once
EMC_DYN_WR_OFS 00000044

Symbol: EMC_DYN_WR_OFS
   Definitions
      At line 395 in file LPC2400.s
   Uses
      At line 1214 in file LPC2400.s
Comment: EMC_DYN_WR_OFS used once
EMC_DYN_WR_Val 00000001

Symbol: EMC_DYN_WR_Val
   Definitions
      At line 563 in file LPC2400.s
   Uses
      At line 1213 in file LPC2400.s
Comment: EMC_DYN_WR_Val used once
EMC_DYN_XSR_OFS 00000050

Symbol: EMC_DYN_XSR_OFS
   Definitions
      At line 398 in file LPC2400.s
   Uses
      At line 1220 in file LPC2400.s
Comment: EMC_DYN_XSR_OFS used once
EMC_DYN_XSR_Val 00000007

Symbol: EMC_DYN_XSR_Val
   Definitions



ARM Macro Assembler    Page 10 Alphabetic symbol ordering
Absolute symbols

      At line 566 in file LPC2400.s
   Uses
      At line 1219 in file LPC2400.s
Comment: EMC_DYN_XSR_Val used once
EMC_PCONP_Const 00000800

Symbol: EMC_PCONP_Const
   Definitions
      At line 446 in file LPC2400.s
   Uses
      At line 1178 in file LPC2400.s
Comment: EMC_PCONP_Const used once
EMC_PINSEL5_Val 55010115

Symbol: EMC_PINSEL5_Val
   Definitions
      At line 450 in file LPC2400.s
   Uses
      At line 1189 in file LPC2400.s
Comment: EMC_PINSEL5_Val used once
EMC_PINSEL6_Val 55555555

Symbol: EMC_PINSEL6_Val
   Definitions
      At line 451 in file LPC2400.s
   Uses
      At line 1191 in file LPC2400.s
Comment: EMC_PINSEL6_Val used once
EMC_PINSEL7_Val 55555555

Symbol: EMC_PINSEL7_Val
   Definitions
      At line 452 in file LPC2400.s
   Uses
      At line 1193 in file LPC2400.s
Comment: EMC_PINSEL7_Val used once
EMC_PINSEL8_Val 55555555

Symbol: EMC_PINSEL8_Val
   Definitions
      At line 453 in file LPC2400.s
   Uses
      At line 1195 in file LPC2400.s
Comment: EMC_PINSEL8_Val used once
EMC_PINSEL9_Val 50055555

Symbol: EMC_PINSEL9_Val
   Definitions
      At line 454 in file LPC2400.s
   Uses
      At line 1197 in file LPC2400.s
Comment: EMC_PINSEL9_Val used once
EMC_SETUP 00000001

Symbol: EMC_SETUP
   Definitions
      At line 458 in file LPC2400.s
   Uses
      At line 1173 in file LPC2400.s



ARM Macro Assembler    Page 11 Alphabetic symbol ordering
Absolute symbols

Comment: EMC_SETUP used once
EMC_STACS0_SETUP 00000001

Symbol: EMC_STACS0_SETUP
   Definitions
      At line 763 in file LPC2400.s
   Uses
      At line 1381 in file LPC2400.s
Comment: EMC_STACS0_SETUP used once
EMC_STACS1_SETUP 00000000

Symbol: EMC_STACS1_SETUP
   Definitions
      At line 830 in file LPC2400.s
   Uses
      At line 1398 in file LPC2400.s
Comment: EMC_STACS1_SETUP used once
EMC_STACS2_SETUP 00000000

Symbol: EMC_STACS2_SETUP
   Definitions
      At line 897 in file LPC2400.s
   Uses
      At line 1415 in file LPC2400.s
Comment: EMC_STACS2_SETUP used once
EMC_STACS3_SETUP 00000000

Symbol: EMC_STACS3_SETUP
   Definitions
      At line 964 in file LPC2400.s
   Uses
      At line 1432 in file LPC2400.s
Comment: EMC_STACS3_SETUP used once
EMC_STATIC_SETUP 00000001

Symbol: EMC_STATIC_SETUP
   Definitions
      At line 759 in file LPC2400.s
   Uses
      At line 1375 in file LPC2400.s
Comment: EMC_STATIC_SETUP used once
EMC_STAT_OFS 00000004

Symbol: EMC_STAT_OFS
   Definitions
      At line 385 in file LPC2400.s
   Uses
      None
Comment: EMC_STAT_OFS unused
EMC_STA_CFG0_OFS 00000200

Symbol: EMC_STA_CFG0_OFS
   Definitions
      At line 409 in file LPC2400.s
   Uses
      At line 1383 in file LPC2400.s
Comment: EMC_STA_CFG0_OFS used once
EMC_STA_CFG0_Val 00000081




ARM Macro Assembler    Page 12 Alphabetic symbol ordering
Absolute symbols

Symbol: EMC_STA_CFG0_Val
   Definitions
      At line 782 in file LPC2400.s
   Uses
      At line 1382 in file LPC2400.s
Comment: EMC_STA_CFG0_Val used once
EMC_STA_CFG1_OFS 00000220

Symbol: EMC_STA_CFG1_OFS
   Definitions
      At line 416 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_CFG1_OFS unused
EMC_STA_CFG1_Val 00000000

Symbol: EMC_STA_CFG1_Val
   Definitions
      At line 849 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_CFG1_Val unused
EMC_STA_CFG2_OFS 00000240

Symbol: EMC_STA_CFG2_OFS
   Definitions
      At line 423 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_CFG2_OFS unused
EMC_STA_CFG2_Val 00000000

Symbol: EMC_STA_CFG2_Val
   Definitions
      At line 916 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_CFG2_Val unused
EMC_STA_CFG3_OFS 00000260

Symbol: EMC_STA_CFG3_OFS
   Definitions
      At line 430 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_CFG3_OFS unused
EMC_STA_CFG3_Val 00000000

Symbol: EMC_STA_CFG3_Val
   Definitions
      At line 983 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_CFG3_Val unused
EMC_STA_EXT_W_OFS 00000080

Symbol: EMC_STA_EXT_W_OFS
   Definitions
      At line 437 in file LPC2400.s



ARM Macro Assembler    Page 13 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 1454 in file LPC2400.s
Comment: EMC_STA_EXT_W_OFS used once
EMC_STA_EXT_W_Val 00000000

Symbol: EMC_STA_EXT_W_Val
   Definitions
      At line 1034 in file LPC2400.s
   Uses
      At line 1453 in file LPC2400.s
Comment: EMC_STA_EXT_W_Val used once
EMC_STA_WOEN0_OFS 00000208

Symbol: EMC_STA_WOEN0_OFS
   Definitions
      At line 411 in file LPC2400.s
   Uses
      At line 1387 in file LPC2400.s
Comment: EMC_STA_WOEN0_OFS used once
EMC_STA_WOEN0_Val 00000002

Symbol: EMC_STA_WOEN0_Val
   Definitions
      At line 796 in file LPC2400.s
   Uses
      At line 1386 in file LPC2400.s
Comment: EMC_STA_WOEN0_Val used once
EMC_STA_WOEN1_OFS 00000228

Symbol: EMC_STA_WOEN1_OFS
   Definitions
      At line 418 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WOEN1_OFS unused
EMC_STA_WOEN1_Val 00000000

Symbol: EMC_STA_WOEN1_Val
   Definitions
      At line 863 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WOEN1_Val unused
EMC_STA_WOEN2_OFS 00000248

Symbol: EMC_STA_WOEN2_OFS
   Definitions
      At line 425 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WOEN2_OFS unused
EMC_STA_WOEN2_Val 00000000

Symbol: EMC_STA_WOEN2_Val
   Definitions
      At line 930 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WOEN2_Val unused



ARM Macro Assembler    Page 14 Alphabetic symbol ordering
Absolute symbols

EMC_STA_WOEN3_OFS 00000268

Symbol: EMC_STA_WOEN3_OFS
   Definitions
      At line 432 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WOEN3_OFS unused
EMC_STA_WOEN3_Val 00000000

Symbol: EMC_STA_WOEN3_Val
   Definitions
      At line 997 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WOEN3_Val unused
EMC_STA_WPAGE0_OFS 00000210

Symbol: EMC_STA_WPAGE0_OFS
   Definitions
      At line 413 in file LPC2400.s
   Uses
      At line 1391 in file LPC2400.s
Comment: EMC_STA_WPAGE0_OFS used once
EMC_STA_WPAGE0_Val 0000001F

Symbol: EMC_STA_WPAGE0_Val
   Definitions
      At line 810 in file LPC2400.s
   Uses
      At line 1390 in file LPC2400.s
Comment: EMC_STA_WPAGE0_Val used once
EMC_STA_WPAGE1_OFS 00000230

Symbol: EMC_STA_WPAGE1_OFS
   Definitions
      At line 420 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WPAGE1_OFS unused
EMC_STA_WPAGE1_Val 0000001F

Symbol: EMC_STA_WPAGE1_Val
   Definitions
      At line 877 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WPAGE1_Val unused
EMC_STA_WPAGE2_OFS 00000250

Symbol: EMC_STA_WPAGE2_OFS
   Definitions
      At line 427 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WPAGE2_OFS unused
EMC_STA_WPAGE2_Val 0000001F

Symbol: EMC_STA_WPAGE2_Val



ARM Macro Assembler    Page 15 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 944 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WPAGE2_Val unused
EMC_STA_WPAGE3_OFS 00000270

Symbol: EMC_STA_WPAGE3_OFS
   Definitions
      At line 434 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WPAGE3_OFS unused
EMC_STA_WPAGE3_Val 0000001F

Symbol: EMC_STA_WPAGE3_Val
   Definitions
      At line 1011 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WPAGE3_Val unused
EMC_STA_WRD0_OFS 0000020C

Symbol: EMC_STA_WRD0_OFS
   Definitions
      At line 412 in file LPC2400.s
   Uses
      At line 1389 in file LPC2400.s
Comment: EMC_STA_WRD0_OFS used once
EMC_STA_WRD0_Val 0000001F

Symbol: EMC_STA_WRD0_Val
   Definitions
      At line 803 in file LPC2400.s
   Uses
      At line 1388 in file LPC2400.s
Comment: EMC_STA_WRD0_Val used once
EMC_STA_WRD1_OFS 0000022C

Symbol: EMC_STA_WRD1_OFS
   Definitions
      At line 419 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WRD1_OFS unused
EMC_STA_WRD1_Val 0000001F

Symbol: EMC_STA_WRD1_Val
   Definitions
      At line 870 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WRD1_Val unused
EMC_STA_WRD2_OFS 0000024C

Symbol: EMC_STA_WRD2_OFS
   Definitions
      At line 426 in file LPC2400.s
   Uses



ARM Macro Assembler    Page 16 Alphabetic symbol ordering
Absolute symbols

      None
Comment: EMC_STA_WRD2_OFS unused
EMC_STA_WRD2_Val 0000001F

Symbol: EMC_STA_WRD2_Val
   Definitions
      At line 937 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WRD2_Val unused
EMC_STA_WRD3_OFS 0000026C

Symbol: EMC_STA_WRD3_OFS
   Definitions
      At line 433 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WRD3_OFS unused
EMC_STA_WRD3_Val 0000001F

Symbol: EMC_STA_WRD3_Val
   Definitions
      At line 1004 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WRD3_Val unused
EMC_STA_WTURN0_OFS 00000218

Symbol: EMC_STA_WTURN0_OFS
   Definitions
      At line 415 in file LPC2400.s
   Uses
      At line 1395 in file LPC2400.s
Comment: EMC_STA_WTURN0_OFS used once
EMC_STA_WTURN0_Val 0000000F

Symbol: EMC_STA_WTURN0_Val
   Definitions
      At line 824 in file LPC2400.s
   Uses
      At line 1394 in file LPC2400.s
Comment: EMC_STA_WTURN0_Val used once
EMC_STA_WTURN1_OFS 00000238

Symbol: EMC_STA_WTURN1_OFS
   Definitions
      At line 422 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WTURN1_OFS unused
EMC_STA_WTURN1_Val 0000000F

Symbol: EMC_STA_WTURN1_Val
   Definitions
      At line 891 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WTURN1_Val unused
EMC_STA_WTURN2_OFS 00000258



ARM Macro Assembler    Page 17 Alphabetic symbol ordering
Absolute symbols


Symbol: EMC_STA_WTURN2_OFS
   Definitions
      At line 429 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WTURN2_OFS unused
EMC_STA_WTURN2_Val 0000000F

Symbol: EMC_STA_WTURN2_Val
   Definitions
      At line 958 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WTURN2_Val unused
EMC_STA_WTURN3_OFS 00000278

Symbol: EMC_STA_WTURN3_OFS
   Definitions
      At line 436 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WTURN3_OFS unused
EMC_STA_WTURN3_Val 0000000F

Symbol: EMC_STA_WTURN3_Val
   Definitions
      At line 1025 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WTURN3_Val unused
EMC_STA_WWEN0_OFS 00000204

Symbol: EMC_STA_WWEN0_OFS
   Definitions
      At line 410 in file LPC2400.s
   Uses
      At line 1385 in file LPC2400.s
Comment: EMC_STA_WWEN0_OFS used once
EMC_STA_WWEN0_Val 00000002

Symbol: EMC_STA_WWEN0_Val
   Definitions
      At line 789 in file LPC2400.s
   Uses
      At line 1384 in file LPC2400.s
Comment: EMC_STA_WWEN0_Val used once
EMC_STA_WWEN1_OFS 00000224

Symbol: EMC_STA_WWEN1_OFS
   Definitions
      At line 417 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWEN1_OFS unused
EMC_STA_WWEN1_Val 00000000

Symbol: EMC_STA_WWEN1_Val
   Definitions



ARM Macro Assembler    Page 18 Alphabetic symbol ordering
Absolute symbols

      At line 856 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWEN1_Val unused
EMC_STA_WWEN2_OFS 00000244

Symbol: EMC_STA_WWEN2_OFS
   Definitions
      At line 424 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWEN2_OFS unused
EMC_STA_WWEN2_Val 00000000

Symbol: EMC_STA_WWEN2_Val
   Definitions
      At line 923 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWEN2_Val unused
EMC_STA_WWEN3_OFS 00000264

Symbol: EMC_STA_WWEN3_OFS
   Definitions
      At line 431 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWEN3_OFS unused
EMC_STA_WWEN3_Val 00000000

Symbol: EMC_STA_WWEN3_Val
   Definitions
      At line 990 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWEN3_Val unused
EMC_STA_WWR0_OFS 00000214

Symbol: EMC_STA_WWR0_OFS
   Definitions
      At line 414 in file LPC2400.s
   Uses
      At line 1393 in file LPC2400.s
Comment: EMC_STA_WWR0_OFS used once
EMC_STA_WWR0_Val 0000001F

Symbol: EMC_STA_WWR0_Val
   Definitions
      At line 817 in file LPC2400.s
   Uses
      At line 1392 in file LPC2400.s
Comment: EMC_STA_WWR0_Val used once
EMC_STA_WWR1_OFS 00000234

Symbol: EMC_STA_WWR1_OFS
   Definitions
      At line 421 in file LPC2400.s
   Uses
      None



ARM Macro Assembler    Page 19 Alphabetic symbol ordering
Absolute symbols

Comment: EMC_STA_WWR1_OFS unused
EMC_STA_WWR1_Val 0000001F

Symbol: EMC_STA_WWR1_Val
   Definitions
      At line 884 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWR1_Val unused
EMC_STA_WWR2_OFS 00000254

Symbol: EMC_STA_WWR2_OFS
   Definitions
      At line 428 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWR2_OFS unused
EMC_STA_WWR2_Val 0000001F

Symbol: EMC_STA_WWR2_Val
   Definitions
      At line 951 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWR2_Val unused
EMC_STA_WWR3_OFS 00000274

Symbol: EMC_STA_WWR3_OFS
   Definitions
      At line 435 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWR3_OFS unused
EMC_STA_WWR3_Val 0000001F

Symbol: EMC_STA_WWR3_Val
   Definitions
      At line 1018 in file LPC2400.s
   Uses
      None
Comment: EMC_STA_WWR3_Val unused
EXTMEM_BASE 80000000

Symbol: EXTMEM_BASE
   Definitions
      At line 62 in file LPC2400.s
   Uses
      None
Comment: EXTMEM_BASE unused
FIQ_Stack_Size 00000800

Symbol: FIQ_Stack_Size
   Definitions
      At line 90 in file LPC2400.s
   Uses
      At line 95 in file LPC2400.s
      At line 1508 in file LPC2400.s

FLASH_BASE 00000000



ARM Macro Assembler    Page 20 Alphabetic symbol ordering
Absolute symbols


Symbol: FLASH_BASE
   Definitions
      At line 60 in file LPC2400.s
   Uses
      None
Comment: FLASH_BASE unused
F_Bit 00000040

Symbol: F_Bit
   Definitions
      At line 54 in file LPC2400.s
   Uses
      At line 1496 in file LPC2400.s
      At line 1501 in file LPC2400.s
      At line 1506 in file LPC2400.s
      At line 1511 in file LPC2400.s
      At line 1516 in file LPC2400.s

Heap_Size 00400000

Symbol: Heap_Size
   Definitions
      At line 109 in file LPC2400.s
   Uses
      At line 113 in file LPC2400.s
      At line 1555 in file LPC2400.s

IRQ_Stack_Size 00000800

Symbol: IRQ_Stack_Size
   Definitions
      At line 91 in file LPC2400.s
   Uses
      At line 95 in file LPC2400.s
      At line 1513 in file LPC2400.s

I_Bit 00000080

Symbol: I_Bit
   Definitions
      At line 53 in file LPC2400.s
   Uses
      At line 1496 in file LPC2400.s
      At line 1501 in file LPC2400.s
      At line 1506 in file LPC2400.s
      At line 1511 in file LPC2400.s
      At line 1516 in file LPC2400.s

MAMCR_OFS 00000000

Symbol: MAMCR_OFS
   Definitions
      At line 345 in file LPC2400.s
   Uses
      At line 1167 in file LPC2400.s
Comment: MAMCR_OFS used once
MAMCR_Val 00000002




ARM Macro Assembler    Page 21 Alphabetic symbol ordering
Absolute symbols

Symbol: MAMCR_Val
   Definitions
      At line 360 in file LPC2400.s
   Uses
      At line 1166 in file LPC2400.s
Comment: MAMCR_Val used once
MAMTIM_OFS 00000004

Symbol: MAMTIM_OFS
   Definitions
      At line 346 in file LPC2400.s
   Uses
      At line 1165 in file LPC2400.s
Comment: MAMTIM_OFS used once
MAMTIM_Val 00000004

Symbol: MAMTIM_Val
   Definitions
      At line 361 in file LPC2400.s
   Uses
      At line 1164 in file LPC2400.s
Comment: MAMTIM_Val used once
MAM_BASE E01FC000

Symbol: MAM_BASE
   Definitions
      At line 344 in file LPC2400.s
   Uses
      At line 1163 in file LPC2400.s
Comment: MAM_BASE used once
MAM_SETUP 00000001

Symbol: MAM_SETUP
   Definitions
      At line 359 in file LPC2400.s
   Uses
      At line 1162 in file LPC2400.s
Comment: MAM_SETUP used once
MEMMAP E01FC040

Symbol: MEMMAP
   Definitions
      At line 1477 in file LPC2400.s
   Uses
      None
Comment: MEMMAP unused
MODE_CMD 00000080

Symbol: MODE_CMD
   Definitions
      At line 441 in file LPC2400.s
   Uses
      At line 1286 in file LPC2400.s
Comment: MODE_CMD used once
Mode_ABT 00000017

Symbol: Mode_ABT
   Definitions
      At line 49 in file LPC2400.s



ARM Macro Assembler    Page 22 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 1501 in file LPC2400.s
Comment: Mode_ABT used once
Mode_FIQ 00000011

Symbol: Mode_FIQ
   Definitions
      At line 46 in file LPC2400.s
   Uses
      At line 1506 in file LPC2400.s
Comment: Mode_FIQ used once
Mode_IRQ 00000012

Symbol: Mode_IRQ
   Definitions
      At line 47 in file LPC2400.s
   Uses
      At line 1511 in file LPC2400.s
Comment: Mode_IRQ used once
Mode_SVC 00000013

Symbol: Mode_SVC
   Definitions
      At line 48 in file LPC2400.s
   Uses
      At line 1516 in file LPC2400.s
Comment: Mode_SVC used once
Mode_SYS 0000001F

Symbol: Mode_SYS
   Definitions
      At line 51 in file LPC2400.s
   Uses
      None
Comment: Mode_SYS unused
Mode_UND 0000001B

Symbol: Mode_UND
   Definitions
      At line 50 in file LPC2400.s
   Uses
      At line 1496 in file LPC2400.s
Comment: Mode_UND used once
Mode_USR 00000010

Symbol: Mode_USR
   Definitions
      At line 45 in file LPC2400.s
   Uses
      None
Comment: Mode_USR unused
NOP_CMD 00000180

Symbol: NOP_CMD
   Definitions
      At line 443 in file LPC2400.s
   Uses
      At line 1266 in file LPC2400.s
Comment: NOP_CMD used once



ARM Macro Assembler    Page 23 Alphabetic symbol ordering
Absolute symbols

NORMAL_CMD 00000000

Symbol: NORMAL_CMD
   Definitions
      At line 440 in file LPC2400.s
   Uses
      At line 1347 in file LPC2400.s
Comment: NORMAL_CMD used once
OSCEN 00000020

Symbol: OSCEN
   Definitions
      At line 137 in file LPC2400.s
   Uses
      At line 1102 in file LPC2400.s
Comment: OSCEN used once
OSCRANGE 00000010

Symbol: OSCRANGE
   Definitions
      At line 136 in file LPC2400.s
   Uses
      None
Comment: OSCRANGE unused
OSCSTAT 00000040

Symbol: OSCSTAT
   Definitions
      At line 138 in file LPC2400.s
   Uses
      At line 1104 in file LPC2400.s
Comment: OSCSTAT used once
PALL_CMD 00000100

Symbol: PALL_CMD
   Definitions
      At line 442 in file LPC2400.s
   Uses
      At line 1273 in file LPC2400.s
Comment: PALL_CMD used once
PCB_BASE E002C000

Symbol: PCB_BASE
   Definitions
      At line 366 in file LPC2400.s
   Uses
      At line 1176 in file LPC2400.s
Comment: PCB_BASE used once
PCLKSEL0_OFS 000001A8

Symbol: PCLKSEL0_OFS
   Definitions
      At line 129 in file LPC2400.s
   Uses
      At line 1148 in file LPC2400.s
Comment: PCLKSEL0_OFS used once
PCLKSEL0_Val 00000000

Symbol: PCLKSEL0_Val



ARM Macro Assembler    Page 24 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 338 in file LPC2400.s
   Uses
      At line 1147 in file LPC2400.s
Comment: PCLKSEL0_Val used once
PCLKSEL1_OFS 000001AC

Symbol: PCLKSEL1_OFS
   Definitions
      At line 130 in file LPC2400.s
   Uses
      At line 1150 in file LPC2400.s
Comment: PCLKSEL1_OFS used once
PCLKSEL1_Val 00000000

Symbol: PCLKSEL1_Val
   Definitions
      At line 339 in file LPC2400.s
   Uses
      At line 1149 in file LPC2400.s
Comment: PCLKSEL1_Val used once
PCONP_OFS 000000C4

Symbol: PCONP_OFS
   Definitions
      At line 133 in file LPC2400.s
   Uses
      At line 1179 in file LPC2400.s
      At line 1181 in file LPC2400.s

PCON_OFS 000000C0

Symbol: PCON_OFS
   Definitions
      At line 132 in file LPC2400.s
   Uses
      None
Comment: PCON_OFS unused
PINSEL0_OFS 00000000

Symbol: PINSEL0_OFS
   Definitions
      At line 367 in file LPC2400.s
   Uses
      None
Comment: PINSEL0_OFS unused
PINSEL10_OFS 00000028

Symbol: PINSEL10_OFS
   Definitions
      At line 377 in file LPC2400.s
   Uses
      None
Comment: PINSEL10_OFS unused
PINSEL1_OFS 00000004

Symbol: PINSEL1_OFS
   Definitions
      At line 368 in file LPC2400.s



ARM Macro Assembler    Page 25 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: PINSEL1_OFS unused
PINSEL2_OFS 00000008

Symbol: PINSEL2_OFS
   Definitions
      At line 369 in file LPC2400.s
   Uses
      None
Comment: PINSEL2_OFS unused
PINSEL3_OFS 0000000C

Symbol: PINSEL3_OFS
   Definitions
      At line 370 in file LPC2400.s
   Uses
      None
Comment: PINSEL3_OFS unused
PINSEL4_OFS 00000010

Symbol: PINSEL4_OFS
   Definitions
      At line 371 in file LPC2400.s
   Uses
      None
Comment: PINSEL4_OFS unused
PINSEL5_OFS 00000014

Symbol: PINSEL5_OFS
   Definitions
      At line 372 in file LPC2400.s
   Uses
      At line 1190 in file LPC2400.s
Comment: PINSEL5_OFS used once
PINSEL6_OFS 00000018

Symbol: PINSEL6_OFS
   Definitions
      At line 373 in file LPC2400.s
   Uses
      At line 1192 in file LPC2400.s
Comment: PINSEL6_OFS used once
PINSEL7_OFS 0000001C

Symbol: PINSEL7_OFS
   Definitions
      At line 374 in file LPC2400.s
   Uses
      At line 1194 in file LPC2400.s
Comment: PINSEL7_OFS used once
PINSEL8_OFS 00000020

Symbol: PINSEL8_OFS
   Definitions
      At line 375 in file LPC2400.s
   Uses
      At line 1196 in file LPC2400.s
Comment: PINSEL8_OFS used once



ARM Macro Assembler    Page 26 Alphabetic symbol ordering
Absolute symbols

PINSEL9_OFS 00000024

Symbol: PINSEL9_OFS
   Definitions
      At line 376 in file LPC2400.s
   Uses
      At line 1198 in file LPC2400.s
Comment: PINSEL9_OFS used once
PLLCFG_OFS 00000084

Symbol: PLLCFG_OFS
   Definitions
      At line 122 in file LPC2400.s
   Uses
      At line 1111 in file LPC2400.s
Comment: PLLCFG_OFS used once
PLLCFG_Val 0000000B

Symbol: PLLCFG_Val
   Definitions
      At line 335 in file LPC2400.s
   Uses
      At line 1110 in file LPC2400.s
      At line 1134 in file LPC2400.s

PLLCON_OFS 00000080

Symbol: PLLCON_OFS
   Definitions
      At line 121 in file LPC2400.s
   Uses
      At line 1115 in file LPC2400.s
      At line 1154 in file LPC2400.s

PLLCON_PLLC 00000002

Symbol: PLLCON_PLLC
   Definitions
      At line 140 in file LPC2400.s
   Uses
      At line 1153 in file LPC2400.s
Comment: PLLCON_PLLC used once
PLLCON_PLLE 00000001

Symbol: PLLCON_PLLE
   Definitions
      At line 139 in file LPC2400.s
   Uses
      At line 1114 in file LPC2400.s
      At line 1153 in file LPC2400.s

PLLFEED_OFS 0000008C

Symbol: PLLFEED_OFS
   Definitions
      At line 124 in file LPC2400.s
   Uses
      At line 1112 in file LPC2400.s
      At line 1113 in file LPC2400.s



ARM Macro Assembler    Page 27 Alphabetic symbol ordering
Absolute symbols

      At line 1116 in file LPC2400.s
      At line 1117 in file LPC2400.s
      At line 1155 in file LPC2400.s
      At line 1156 in file LPC2400.s

PLLSTAT_M 00007FFF

Symbol: PLLSTAT_M
   Definitions
      At line 141 in file LPC2400.s
   Uses
      At line 1132 in file LPC2400.s
Comment: PLLSTAT_M used once
PLLSTAT_N 00FF0000

Symbol: PLLSTAT_N
   Definitions
      At line 142 in file LPC2400.s
   Uses
      At line 1132 in file LPC2400.s
Comment: PLLSTAT_N used once
PLLSTAT_OFS 00000088

Symbol: PLLSTAT_OFS
   Definitions
      At line 123 in file LPC2400.s
   Uses
      At line 1121 in file LPC2400.s
      At line 1131 in file LPC2400.s

PLLSTAT_PLOCK 04000000

Symbol: PLLSTAT_PLOCK
   Definitions
      At line 143 in file LPC2400.s
   Uses
      At line 1122 in file LPC2400.s
Comment: PLLSTAT_PLOCK used once
RAM_BASE 40000000

Symbol: RAM_BASE
   Definitions
      At line 61 in file LPC2400.s
   Uses
      None
Comment: RAM_BASE unused
SCB_BASE E01FC000

Symbol: SCB_BASE
   Definitions
      At line 120 in file LPC2400.s
   Uses
      At line 1094 in file LPC2400.s
      At line 1175 in file LPC2400.s

SCS_OFS 000001A0

Symbol: SCS_OFS
   Definitions



ARM Macro Assembler    Page 28 Alphabetic symbol ordering
Absolute symbols

      At line 128 in file LPC2400.s
   Uses
      At line 1100 in file LPC2400.s
      At line 1103 in file LPC2400.s

SCS_Val 00000020

Symbol: SCS_Val
   Definitions
      At line 333 in file LPC2400.s
   Uses
      At line 1099 in file LPC2400.s
      At line 1102 in file LPC2400.s

STA_MEM0_BASE 80000000

Symbol: STA_MEM0_BASE
   Definitions
      At line 65 in file LPC2400.s
   Uses
      None
Comment: STA_MEM0_BASE unused
STA_MEM1_BASE 81000000

Symbol: STA_MEM1_BASE
   Definitions
      At line 66 in file LPC2400.s
   Uses
      None
Comment: STA_MEM1_BASE unused
STA_MEM2_BASE 82000000

Symbol: STA_MEM2_BASE
   Definitions
      At line 67 in file LPC2400.s
   Uses
      None
Comment: STA_MEM2_BASE unused
STA_MEM3_BASE 83000000

Symbol: STA_MEM3_BASE
   Definitions
      At line 68 in file LPC2400.s
   Uses
      None
Comment: STA_MEM3_BASE unused
SVC_Stack_Size 00000300

Symbol: SVC_Stack_Size
   Definitions
      At line 87 in file LPC2400.s
   Uses
      At line 95 in file LPC2400.s
      At line 1518 in file LPC2400.s

Stack_Size 00001310

Symbol: Stack_Size
   Definitions



ARM Macro Assembler    Page 29 Alphabetic symbol ordering
Absolute symbols

      At line 95 in file LPC2400.s
   Uses
      At line 99 in file LPC2400.s
      At line 102 in file LPC2400.s

UND_Stack_Size 00000008

Symbol: UND_Stack_Size
   Definitions
      At line 86 in file LPC2400.s
   Uses
      At line 95 in file LPC2400.s
      At line 1498 in file LPC2400.s

USBCLKCFG_OFS 00000108

Symbol: USBCLKCFG_OFS
   Definitions
      At line 126 in file LPC2400.s
   Uses
      At line 1144 in file LPC2400.s
Comment: USBCLKCFG_OFS used once
USBCLKCFG_Val 00000005

Symbol: USBCLKCFG_Val
   Definitions
      At line 337 in file LPC2400.s
   Uses
      At line 1143 in file LPC2400.s
Comment: USBCLKCFG_Val used once
USR_Stack_Size 00000008

Symbol: USR_Stack_Size
   Definitions
      At line 92 in file LPC2400.s
   Uses
      At line 1554 in file LPC2400.s
Comment: USR_Stack_Size used once
205 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 1535 in file LPC2400.s
   Uses
      At line 1536 in file LPC2400.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 1549 in file LPC2400.s
   Uses
      None
Comment: __use_two_region_memory unused
vPortYieldProcessor 00000000

Symbol: vPortYieldProcessor
   Definitions
      At line 1055 in file LPC2400.s
   Uses
      At line 1070 in file LPC2400.s
Comment: vPortYieldProcessor used once
vPreemptiveTick 00000000

Symbol: vPreemptiveTick
   Definitions
      At line 1056 in file LPC2400.s
   Uses
      At line 1076 in file LPC2400.s
Comment: vPreemptiveTick used once
4 symbols
591 symbols in table
